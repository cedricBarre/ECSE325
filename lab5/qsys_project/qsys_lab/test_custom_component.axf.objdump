
H:/Desktop/ECSE325/lab5/qsys_project/qsys_lab/test_custom_component.axf:     file format elf32-littlearm


Disassembly of section .text:

00000000 <__cs3_interrupt_vector>:
       0:	18 f0 9f e5 18 f0 9f e5 18 f0 9f e5 18 f0 9f e5     ................
      10:	18 f0 9f e5 18 f0 9f e5 18 f0 9f e5 18 f0 9f e5     ................
      20:	40 00 00 00 cc 17 00 00 d0 17 00 00 d4 17 00 00     @...............
      30:	d8 17 00 00 c8 17 00 00 dc 17 00 00 e0 17 00 00     ................

00000040 <__cs3_reset>:
      40:	ea000026 	b	e0 <__cs3_start_asm_sim>

00000044 <__cs3_start_c>:
      44:	e59f608c 	ldr	r6, [pc, #140]	; d8 <__cs3_region_zero_size_ram+0x80>
      48:	e3560000 	cmp	r6, #0
      4c:	e92d4080 	push	{r7, lr}
      50:	e2466001 	sub	r6, r6, #1
      54:	0a00001e 	beq	d4 <__cs3_region_zero_size_ram+0x7c>
      58:	e59f507c 	ldr	r5, [pc, #124]	; dc <__cs3_region_zero_size_ram+0x84>
      5c:	e3a00000 	mov	r0, #0
      60:	e3a01000 	mov	r1, #0
      64:	e515200c 	ldr	r2, [r5, #-12]
      68:	e515e010 	ldr	lr, [r5, #-16]
      6c:	e5154008 	ldr	r4, [r5, #-8]
      70:	e15e0002 	cmp	lr, r2
      74:	00822004 	addeq	r2, r2, r4
      78:	0a000009 	beq	a4 <__cs3_region_zero_size_ram+0x4c>
      7c:	e3540000 	cmp	r4, #0
      80:	0a000007 	beq	a4 <__cs3_region_zero_size_ram+0x4c>
      84:	e1a07002 	mov	r7, r2
      88:	e1a0c002 	mov	r12, r2
      8c:	e8be000c 	ldm	lr!, {r2, r3}
      90:	e8ac000c 	stmia	r12!, {r2, r3}
      94:	e067300c 	rsb	r3, r7, r12
      98:	e1540003 	cmp	r4, r3
      9c:	e1a0200c 	mov	r2, r12
      a0:	1afffff9 	bne	8c <__cs3_region_zero_size_ram+0x34>
      a4:	e515e004 	ldr	lr, [r5, #-4]
      a8:	e35e0000 	cmp	lr, #0
      ac:	11a03002 	movne	r3, r2
      b0:	0a000003 	beq	c4 <__cs3_region_zero_size_ram+0x6c>
      b4:	e8a30003 	stmia	r3!, {r0, r1}
      b8:	e062c003 	rsb	r12, r2, r3
      bc:	e15e000c 	cmp	lr, r12
      c0:	1afffffb 	bne	b4 <__cs3_region_zero_size_ram+0x5c>
      c4:	e2466001 	sub	r6, r6, #1
      c8:	e3760001 	cmn	r6, #1
      cc:	e2855014 	add	r5, r5, #20
      d0:	1affffe3 	bne	64 <__cs3_region_zero_size_ram+0xc>
      d4:	eb000573 	bl	16a8 <__cs3_premain>
      d8:	00000001 	.word	0x00000001
      dc:	000018d8 	.word	0x000018d8

000000e0 <__cs3_start_asm_sim>:
      e0:	e28f103c 	add	r1, pc, #60	; 0x3c
      e4:	e3a00016 	mov	r0, #22
      e8:	ef123456 	svc	0x00123456
      ec:	e3500000 	cmp	r0, #0
      f0:	ba000008 	blt	118 <__cs3_start_asm_sim+0x38>
      f4:	e59f2028 	ldr	r2, [pc, #40]	; 124 <__cs3_heap_start_ptr>
      f8:	e59fd01c 	ldr	sp, [pc, #28]	; 11c <__cs3_start_asm_sim+0x3c>
      fc:	e5920008 	ldr	r0, [r2, #8]
     100:	e3500000 	cmp	r0, #0
     104:	11a0d000 	movne	sp, r0
     108:	e59f1010 	ldr	r1, [pc, #16]	; 120 <__cs3_start_asm_sim+0x40>
     10c:	e5920004 	ldr	r0, [r2, #4]
     110:	e3500000 	cmp	r0, #0
     114:	15810000 	strne	r0, [r1]
     118:	eaffffc9 	b	44 <__cs3_start_c>
     11c:	3ffffff8 	.word	0x3ffffff8
     120:	00002120 	.word	0x00002120

00000124 <__cs3_heap_start_ptr>:
     124:	00002180 	.word	0x00002180

00000128 <_start>:
     128:	e51fd000 	ldr	sp, [pc, #-0]	; 130 <_start+0x8>
     12c:	eaffffc4 	b	44 <__cs3_start_c>
     130:	3ffffff8 	.word	0x3ffffff8

00000134 <deregister_tm_clones>:
     134:	e92d4008 	push	{r3, lr}
     138:	e59f002c 	ldr	r0, [pc, #44]	; 16c <deregister_tm_clones+0x38>
     13c:	e59f302c 	ldr	r3, [pc, #44]	; 170 <deregister_tm_clones+0x3c>
     140:	e0603003 	rsb	r3, r0, r3
     144:	e3530006 	cmp	r3, #6
     148:	8a000001 	bhi	154 <deregister_tm_clones+0x20>
     14c:	e8bd4008 	pop	{r3, lr}
     150:	e12fff1e 	bx	lr
     154:	e59f3018 	ldr	r3, [pc, #24]	; 174 <deregister_tm_clones+0x40>
     158:	e3530000 	cmp	r3, #0
     15c:	0afffffa 	beq	14c <deregister_tm_clones+0x18>
     160:	e1a0e00f 	mov	lr, pc
     164:	e12fff13 	bx	r3
     168:	eafffff7 	b	14c <deregister_tm_clones+0x18>
     16c:	00002128 	.word	0x00002128
     170:	0000212b 	.word	0x0000212b
     174:	00000000 	.word	0x00000000

00000178 <register_tm_clones>:
     178:	e92d4008 	push	{r3, lr}
     17c:	e59f0034 	ldr	r0, [pc, #52]	; 1b8 <register_tm_clones+0x40>
     180:	e59f3034 	ldr	r3, [pc, #52]	; 1bc <register_tm_clones+0x44>
     184:	e0603003 	rsb	r3, r0, r3
     188:	e1a03143 	asr	r3, r3, #2
     18c:	e0833fa3 	add	r3, r3, r3, lsr #31
     190:	e1b010c3 	asrs	r1, r3, #1
     194:	1a000001 	bne	1a0 <register_tm_clones+0x28>
     198:	e8bd4008 	pop	{r3, lr}
     19c:	e12fff1e 	bx	lr
     1a0:	e59f2018 	ldr	r2, [pc, #24]	; 1c0 <register_tm_clones+0x48>
     1a4:	e3520000 	cmp	r2, #0
     1a8:	0afffffa 	beq	198 <register_tm_clones+0x20>
     1ac:	e1a0e00f 	mov	lr, pc
     1b0:	e12fff12 	bx	r2
     1b4:	eafffff7 	b	198 <register_tm_clones+0x20>
     1b8:	00002128 	.word	0x00002128
     1bc:	00002128 	.word	0x00002128
     1c0:	00000000 	.word	0x00000000

000001c4 <__do_global_dtors_aux>:
     1c4:	e92d4010 	push	{r4, lr}
     1c8:	e59f402c 	ldr	r4, [pc, #44]	; 1fc <__do_global_dtors_aux+0x38>
     1cc:	e5d43000 	ldrb	r3, [r4]
     1d0:	e3530000 	cmp	r3, #0
     1d4:	1a000006 	bne	1f4 <__do_global_dtors_aux+0x30>
     1d8:	ebffffd5 	bl	134 <deregister_tm_clones>
     1dc:	e59f301c 	ldr	r3, [pc, #28]	; 200 <__do_global_dtors_aux+0x3c>
     1e0:	e3530000 	cmp	r3, #0
     1e4:	159f0018 	ldrne	r0, [pc, #24]	; 204 <__do_global_dtors_aux+0x40>
     1e8:	1320f000 	nopne	{0}
     1ec:	e3a03001 	mov	r3, #1
     1f0:	e5c43000 	strb	r3, [r4]
     1f4:	e8bd4010 	pop	{r4, lr}
     1f8:	e12fff1e 	bx	lr
     1fc:	00002128 	.word	0x00002128
     200:	00000000 	.word	0x00000000
     204:	0000187c 	.word	0x0000187c

00000208 <frame_dummy>:
     208:	e92d4008 	push	{r3, lr}
     20c:	e59f3034 	ldr	r3, [pc, #52]	; 248 <frame_dummy+0x40>
     210:	e3530000 	cmp	r3, #0
     214:	159f0030 	ldrne	r0, [pc, #48]	; 24c <frame_dummy+0x44>
     218:	159f1030 	ldrne	r1, [pc, #48]	; 250 <frame_dummy+0x48>
     21c:	1320f000 	nopne	{0}
     220:	e59f002c 	ldr	r0, [pc, #44]	; 254 <frame_dummy+0x4c>
     224:	e5903000 	ldr	r3, [r0]
     228:	e3530000 	cmp	r3, #0
     22c:	0a000003 	beq	240 <frame_dummy+0x38>
     230:	e59f3020 	ldr	r3, [pc, #32]	; 258 <frame_dummy+0x50>
     234:	e3530000 	cmp	r3, #0
     238:	11a0e00f 	movne	lr, pc
     23c:	112fff13 	bxne	r3
     240:	e8bd4008 	pop	{r3, lr}
     244:	eaffffcb 	b	178 <register_tm_clones>
     248:	00000000 	.word	0x00000000
     24c:	0000187c 	.word	0x0000187c
     250:	0000212c 	.word	0x0000212c
     254:	000018d8 	.word	0x000018d8
     258:	00000000 	.word	0x00000000

0000025c <SetTimer>:
#include<sys/time.h>
#include<stdio.h>
 
int SetTimer(struct timeval *tv, time_t sec)
{
     25c:	e92d4800 	push	{r11, lr}
     260:	e28db004 	add	r11, sp, #4
     264:	e24dd008 	sub	sp, sp, #8
     268:	e50b0008 	str	r0, [r11, #-8]
     26c:	e50b100c 	str	r1, [r11, #-12]
    gettimeofday(tv,NULL);
     270:	e51b0008 	ldr	r0, [r11, #-8]
     274:	e3a01000 	mov	r1, #0
     278:	eb000120 	bl	700 <gettimeofday>
    tv->tv_sec+=sec;
     27c:	e51b3008 	ldr	r3, [r11, #-8]
     280:	e5932000 	ldr	r2, [r3]
     284:	e51b300c 	ldr	r3, [r11, #-12]
     288:	e0822003 	add	r2, r2, r3
     28c:	e51b3008 	ldr	r3, [r11, #-8]
     290:	e5832000 	str	r2, [r3]
 
    return 1;
     294:	e3a03001 	mov	r3, #1
}
     298:	e1a00003 	mov	r0, r3
     29c:	e24bd004 	sub	sp, r11, #4
     2a0:	e8bd8800 	pop	{r11, pc}

000002a4 <CheckTimer>:
////////////////////////////////////////////////// 
int CheckTimer(struct timeval *tv, time_t sec)
{
     2a4:	e92d4800 	push	{r11, lr}
     2a8:	e28db004 	add	r11, sp, #4
     2ac:	e24dd010 	sub	sp, sp, #16
     2b0:	e50b0010 	str	r0, [r11, #-16]
     2b4:	e50b1014 	str	r1, [r11, #-20]	; 0xffffffec
    struct timeval ctv;
    gettimeofday(&ctv,NULL);
     2b8:	e24b300c 	sub	r3, r11, #12
     2bc:	e1a00003 	mov	r0, r3
     2c0:	e3a01000 	mov	r1, #0
     2c4:	eb00010d 	bl	700 <gettimeofday>
 
    if( (ctv.tv_sec >= tv->tv_sec) )
     2c8:	e51b200c 	ldr	r2, [r11, #-12]
     2cc:	e51b3010 	ldr	r3, [r11, #-16]
     2d0:	e5933000 	ldr	r3, [r3]
     2d4:	e1520003 	cmp	r2, r3
     2d8:	ba00000a 	blt	308 <CheckTimer+0x64>
    {
        gettimeofday(tv,NULL);
     2dc:	e51b0010 	ldr	r0, [r11, #-16]
     2e0:	e3a01000 	mov	r1, #0
     2e4:	eb000105 	bl	700 <gettimeofday>
        tv->tv_sec+=sec;
     2e8:	e51b3010 	ldr	r3, [r11, #-16]
     2ec:	e5932000 	ldr	r2, [r3]
     2f0:	e51b3014 	ldr	r3, [r11, #-20]	; 0xffffffec
     2f4:	e0822003 	add	r2, r2, r3
     2f8:	e51b3010 	ldr	r3, [r11, #-16]
     2fc:	e5832000 	str	r2, [r3]
        return 1;
     300:	e3a03001 	mov	r3, #1
     304:	ea000000 	b	30c <CheckTimer+0x68>
    }
    else {
	 return 0;
     308:	e3a03000 	mov	r3, #0
	}
}
     30c:	e1a00003 	mov	r0, r3
     310:	e24bd004 	sub	sp, r11, #4
     314:	e8bd8800 	pop	{r11, pc}

00000318 <pack_hex>:

//////////////////////////////////////
int pack_hex(int hex3, int hex2, int hex1, int hex0)
{
     318:	e52db004 	push	{r11}		; (str r11, [sp, #-4]!)
     31c:	e28db000 	add	r11, sp, #0
     320:	e24dd014 	sub	sp, sp, #20
     324:	e50b0008 	str	r0, [r11, #-8]
     328:	e50b100c 	str	r1, [r11, #-12]
     32c:	e50b2010 	str	r2, [r11, #-16]
     330:	e50b3014 	str	r3, [r11, #-20]	; 0xffffffec
	return ((hex3 << 24) | (hex2 << 16) | (hex1 << 8) | hex0);
     334:	e51b3008 	ldr	r3, [r11, #-8]
     338:	e1a02c03 	lsl	r2, r3, #24
     33c:	e51b300c 	ldr	r3, [r11, #-12]
     340:	e1a03803 	lsl	r3, r3, #16
     344:	e1822003 	orr	r2, r2, r3
     348:	e51b3010 	ldr	r3, [r11, #-16]
     34c:	e1a03403 	lsl	r3, r3, #8
     350:	e1822003 	orr	r2, r2, r3
     354:	e51b3014 	ldr	r3, [r11, #-20]	; 0xffffffec
     358:	e1823003 	orr	r3, r2, r3
}
     35c:	e1a00003 	mov	r0, r3
     360:	e28bd000 	add	sp, r11, #0
     364:	e8bd0800 	ldmfd	sp!, {r11}
     368:	e12fff1e 	bx	lr

0000036c <hex_to_7segment>:
//////////////////////////////////////
int hex_to_7segment(int hex)
{
     36c:	e52db004 	push	{r11}		; (str r11, [sp, #-4]!)
     370:	e28db000 	add	r11, sp, #0
     374:	e24dd00c 	sub	sp, sp, #12
     378:	e50b0008 	str	r0, [r11, #-8]
	switch(hex) {
     37c:	e51b3008 	ldr	r3, [r11, #-8]
     380:	e3530009 	cmp	r3, #9
     384:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
     388:	ea00001d 	b	404 <hex_to_7segment+0x98>
     38c:	000003b4 	.word	0x000003b4
     390:	000003bc 	.word	0x000003bc
     394:	000003c4 	.word	0x000003c4
     398:	000003cc 	.word	0x000003cc
     39c:	000003d4 	.word	0x000003d4
     3a0:	000003dc 	.word	0x000003dc
     3a4:	000003e4 	.word	0x000003e4
     3a8:	000003ec 	.word	0x000003ec
     3ac:	000003f4 	.word	0x000003f4
     3b0:	000003fc 	.word	0x000003fc
	case 0 :
		return 0b11000000;
     3b4:	e3a030c0 	mov	r3, #192	; 0xc0
     3b8:	ea000012 	b	408 <hex_to_7segment+0x9c>
	case 1 :
		return 0b11111001;
     3bc:	e3a030f9 	mov	r3, #249	; 0xf9
     3c0:	ea000010 	b	408 <hex_to_7segment+0x9c>
	case 2 :
		return 0b10100100;
     3c4:	e3a030a4 	mov	r3, #164	; 0xa4
     3c8:	ea00000e 	b	408 <hex_to_7segment+0x9c>
	case 3 :
		return 0b10110000;
     3cc:	e3a030b0 	mov	r3, #176	; 0xb0
     3d0:	ea00000c 	b	408 <hex_to_7segment+0x9c>
	case 4 :
		return 0b10011001;
     3d4:	e3a03099 	mov	r3, #153	; 0x99
     3d8:	ea00000a 	b	408 <hex_to_7segment+0x9c>
	case 5 :
		return 0b10010010;
     3dc:	e3a03092 	mov	r3, #146	; 0x92
     3e0:	ea000008 	b	408 <hex_to_7segment+0x9c>
	case 6 :
		return 0b10000010;
     3e4:	e3a03082 	mov	r3, #130	; 0x82
     3e8:	ea000006 	b	408 <hex_to_7segment+0x9c>
	case 7 :
		return 0b11111000;
     3ec:	e3a030f8 	mov	r3, #248	; 0xf8
     3f0:	ea000004 	b	408 <hex_to_7segment+0x9c>
	case 8 :
		return 0b10000000;
     3f4:	e3a03080 	mov	r3, #128	; 0x80
     3f8:	ea000002 	b	408 <hex_to_7segment+0x9c>
	case 9 :
		return 0b10010000;
     3fc:	e3a03090 	mov	r3, #144	; 0x90
     400:	ea000000 	b	408 <hex_to_7segment+0x9c>
	default :
		return 0b11111111;
     404:	e3a030ff 	mov	r3, #255	; 0xff
}
return(0);
}
     408:	e1a00003 	mov	r0, r3
     40c:	e28bd000 	add	sp, r11, #0
     410:	e8bd0800 	ldmfd	sp!, {r11}
     414:	e12fff1e 	bx	lr

00000418 <main>:
///////////////////////////////////////////


// Simple test program
int main(void)
{
     418:	e92d4870 	push	{r4, r5, r6, r11, lr}
     41c:	e28db010 	add	r11, sp, #16
     420:	e24dd054 	sub	sp, sp, #84	; 0x54
volatile int * component_op1 = (int *) 0xFF200000; // component base address
     424:	e3a03000 	mov	r3, #0
     428:	e34f3f20 	movt	r3, #65312	; 0xff20
     42c:	e50b3034 	str	r3, [r11, #-52]	; 0xffffffcc
volatile int * component_op2 = (int *) 0xFF200004; // component base address + 4
     430:	e3a03004 	mov	r3, #4
     434:	e34f3f20 	movt	r3, #65312	; 0xff20
     438:	e50b3038 	str	r3, [r11, #-56]	; 0xffffffc8
volatile int * component_op3 = (int *) 0xFF200008; // component base address + 4
     43c:	e3a03008 	mov	r3, #8
     440:	e34f3f20 	movt	r3, #65312	; 0xff20
     444:	e50b303c 	str	r3, [r11, #-60]	; 0xffffffc4
volatile int * led = (int *) 0xFF200440; // red LED address
     448:	e3a03d11 	mov	r3, #1088	; 0x440
     44c:	e34f3f20 	movt	r3, #65312	; 0xff20
     450:	e50b3040 	str	r3, [r11, #-64]	; 0xffffffc0
volatile int * hex3_hex0 = (int *) 0xFF200420; // 7-segment LED 3-0 address
     454:	e3a03e42 	mov	r3, #1056	; 0x420
     458:	e34f3f20 	movt	r3, #65312	; 0xff20
     45c:	e50b3044 	str	r3, [r11, #-68]	; 0xffffffbc
volatile int * hex5_hex4 = (int *) 0xFF200410; // 7-segment LED 5-4 address
     460:	e3a03e41 	mov	r3, #1040	; 0x410
     464:	e34f3f20 	movt	r3, #65312	; 0xff20
     468:	e50b3048 	str	r3, [r11, #-72]	; 0xffffffb8
volatile int * switchptr = (int *) 0xFF200430; // SW slider switch address
     46c:	e3a03e43 	mov	r3, #1072	; 0x430
     470:	e34f3f20 	movt	r3, #65312	; 0xff20
     474:	e50b304c 	str	r3, [r11, #-76]	; 0xffffffb4
volatile int * pushbuttons = (int *) 0xFF200400; // pushbuttons address
     478:	e3a03b01 	mov	r3, #1024	; 0x400
     47c:	e34f3f20 	movt	r3, #65312	; 0xff20
     480:	e50b3050 	str	r3, [r11, #-80]	; 0xffffffb0
int switch_value = 0;
     484:	e3a03000 	mov	r3, #0
     488:	e50b3054 	str	r3, [r11, #-84]	; 0xffffffac
int old_switch_value = 0;
     48c:	e3a03000 	mov	r3, #0
     490:	e50b3018 	str	r3, [r11, #-24]	; 0xffffffe8
int pb_val;
int component_value;

struct timeval tv;
SetTimer(&tv,1); 
     494:	e24b3064 	sub	r3, r11, #100	; 0x64
     498:	e1a00003 	mov	r0, r3
     49c:	e3a01001 	mov	r1, #1
     4a0:	ebffff6d 	bl	25c <SetTimer>

int secs = 0;
     4a4:	e3a03000 	mov	r3, #0
     4a8:	e50b301c 	str	r3, [r11, #-28]	; 0xffffffe4
int secs_tens = 0;
     4ac:	e3a03000 	mov	r3, #0
     4b0:	e50b3020 	str	r3, [r11, #-32]	; 0xffffffe0
int mins = 0;
     4b4:	e3a03000 	mov	r3, #0
     4b8:	e50b3024 	str	r3, [r11, #-36]	; 0xffffffdc
int mins_tens = 0;
     4bc:	e3a03000 	mov	r3, #0
     4c0:	e50b3028 	str	r3, [r11, #-40]	; 0xffffffd8
int hours = 0;
     4c4:	e3a03000 	mov	r3, #0
     4c8:	e50b302c 	str	r3, [r11, #-44]	; 0xffffffd4
int hours_tens = 0;
     4cc:	e3a03000 	mov	r3, #0
     4d0:	e50b3030 	str	r3, [r11, #-48]	; 0xffffffd0

while (1)
{
if (CheckTimer(&tv,1)==1) {
     4d4:	e24b3064 	sub	r3, r11, #100	; 0x64
     4d8:	e1a00003 	mov	r0, r3
     4dc:	e3a01001 	mov	r1, #1
     4e0:	ebffff6f 	bl	2a4 <CheckTimer>
     4e4:	e1a03000 	mov	r3, r0
     4e8:	e3530001 	cmp	r3, #1
     4ec:	1a000035 	bne	5c8 <main+0x1b0>
	secs++;
     4f0:	e51b301c 	ldr	r3, [r11, #-28]	; 0xffffffe4
     4f4:	e2833001 	add	r3, r3, #1
     4f8:	e50b301c 	str	r3, [r11, #-28]	; 0xffffffe4
	if (secs == 10) {
     4fc:	e51b301c 	ldr	r3, [r11, #-28]	; 0xffffffe4
     500:	e353000a 	cmp	r3, #10
     504:	1a00002f 	bne	5c8 <main+0x1b0>
	secs = 0;
     508:	e3a03000 	mov	r3, #0
     50c:	e50b301c 	str	r3, [r11, #-28]	; 0xffffffe4
	secs_tens++;
     510:	e51b3020 	ldr	r3, [r11, #-32]	; 0xffffffe0
     514:	e2833001 	add	r3, r3, #1
     518:	e50b3020 	str	r3, [r11, #-32]	; 0xffffffe0
	if (secs_tens == 6) {
     51c:	e51b3020 	ldr	r3, [r11, #-32]	; 0xffffffe0
     520:	e3530006 	cmp	r3, #6
     524:	1a000027 	bne	5c8 <main+0x1b0>
		secs_tens = 0;
     528:	e3a03000 	mov	r3, #0
     52c:	e50b3020 	str	r3, [r11, #-32]	; 0xffffffe0
		mins++;
     530:	e51b3024 	ldr	r3, [r11, #-36]	; 0xffffffdc
     534:	e2833001 	add	r3, r3, #1
     538:	e50b3024 	str	r3, [r11, #-36]	; 0xffffffdc
		if (mins == 10) {
     53c:	e51b3024 	ldr	r3, [r11, #-36]	; 0xffffffdc
     540:	e353000a 	cmp	r3, #10
     544:	1a00001f 	bne	5c8 <main+0x1b0>
			mins = 0;
     548:	e3a03000 	mov	r3, #0
     54c:	e50b3024 	str	r3, [r11, #-36]	; 0xffffffdc
			mins_tens++;
     550:	e51b3028 	ldr	r3, [r11, #-40]	; 0xffffffd8
     554:	e2833001 	add	r3, r3, #1
     558:	e50b3028 	str	r3, [r11, #-40]	; 0xffffffd8
			if (mins_tens == 6) {
     55c:	e51b3028 	ldr	r3, [r11, #-40]	; 0xffffffd8
     560:	e3530006 	cmp	r3, #6
     564:	1a000017 	bne	5c8 <main+0x1b0>
				mins_tens = 0;
     568:	e3a03000 	mov	r3, #0
     56c:	e50b3028 	str	r3, [r11, #-40]	; 0xffffffd8
				hours++;
     570:	e51b302c 	ldr	r3, [r11, #-44]	; 0xffffffd4
     574:	e2833001 	add	r3, r3, #1
     578:	e50b302c 	str	r3, [r11, #-44]	; 0xffffffd4
				if (hours == 10 || ((hours_tens == 1) && (hours == 2))) {
     57c:	e51b302c 	ldr	r3, [r11, #-44]	; 0xffffffd4
     580:	e353000a 	cmp	r3, #10
     584:	0a000005 	beq	5a0 <main+0x188>
     588:	e51b3030 	ldr	r3, [r11, #-48]	; 0xffffffd0
     58c:	e3530001 	cmp	r3, #1
     590:	1a00000c 	bne	5c8 <main+0x1b0>
     594:	e51b302c 	ldr	r3, [r11, #-44]	; 0xffffffd4
     598:	e3530002 	cmp	r3, #2
     59c:	1a000009 	bne	5c8 <main+0x1b0>
					hours = 0;
     5a0:	e3a03000 	mov	r3, #0
     5a4:	e50b302c 	str	r3, [r11, #-44]	; 0xffffffd4
					hours_tens++;
     5a8:	e51b3030 	ldr	r3, [r11, #-48]	; 0xffffffd0
     5ac:	e2833001 	add	r3, r3, #1
     5b0:	e50b3030 	str	r3, [r11, #-48]	; 0xffffffd0
					if (hours_tens == 2) {
     5b4:	e51b3030 	ldr	r3, [r11, #-48]	; 0xffffffd0
     5b8:	e3530002 	cmp	r3, #2
     5bc:	1a000001 	bne	5c8 <main+0x1b0>
						hours_tens = 0;
     5c0:	e3a03000 	mov	r3, #0
     5c4:	e50b3030 	str	r3, [r11, #-48]	; 0xffffffd0
			}
		}
	}
}
}
*(hex3_hex0) = pack_hex(hex_to_7segment(mins_tens),hex_to_7segment(mins),hex_to_7segment(secs_tens),hex_to_7segment(secs));
     5c8:	e51b0028 	ldr	r0, [r11, #-40]	; 0xffffffd8
     5cc:	ebffff66 	bl	36c <hex_to_7segment>
     5d0:	e1a06000 	mov	r6, r0
     5d4:	e51b0024 	ldr	r0, [r11, #-36]	; 0xffffffdc
     5d8:	ebffff63 	bl	36c <hex_to_7segment>
     5dc:	e1a05000 	mov	r5, r0
     5e0:	e51b0020 	ldr	r0, [r11, #-32]	; 0xffffffe0
     5e4:	ebffff60 	bl	36c <hex_to_7segment>
     5e8:	e1a04000 	mov	r4, r0
     5ec:	e51b001c 	ldr	r0, [r11, #-28]	; 0xffffffe4
     5f0:	ebffff5d 	bl	36c <hex_to_7segment>
     5f4:	e1a03000 	mov	r3, r0
     5f8:	e1a00006 	mov	r0, r6
     5fc:	e1a01005 	mov	r1, r5
     600:	e1a02004 	mov	r2, r4
     604:	ebffff43 	bl	318 <pack_hex>
     608:	e1a02000 	mov	r2, r0
     60c:	e51b3044 	ldr	r3, [r11, #-68]	; 0xffffffbc
     610:	e5832000 	str	r2, [r3]
*(hex5_hex4) = pack_hex(0,0,hex_to_7segment(hours_tens),hex_to_7segment(hours));
     614:	e51b0030 	ldr	r0, [r11, #-48]	; 0xffffffd0
     618:	ebffff53 	bl	36c <hex_to_7segment>
     61c:	e1a04000 	mov	r4, r0
     620:	e51b002c 	ldr	r0, [r11, #-44]	; 0xffffffd4
     624:	ebffff50 	bl	36c <hex_to_7segment>
     628:	e1a03000 	mov	r3, r0
     62c:	e3a00000 	mov	r0, #0
     630:	e3a01000 	mov	r1, #0
     634:	e1a02004 	mov	r2, r4
     638:	ebffff36 	bl	318 <pack_hex>
     63c:	e1a02000 	mov	r2, r0
     640:	e51b3048 	ldr	r3, [r11, #-72]	; 0xffffffb8
     644:	e5832000 	str	r2, [r3]
  
pb_val = *(pushbuttons); // read pushbutton values
     648:	e51b3050 	ldr	r3, [r11, #-80]	; 0xffffffb0
     64c:	e5933000 	ldr	r3, [r3]
     650:	e50b3058 	str	r3, [r11, #-88]	; 0xffffffa8
switch_value = *(switchptr); // read board switch values
     654:	e51b304c 	ldr	r3, [r11, #-76]	; 0xffffffb4
     658:	e5933000 	ldr	r3, [r3]
     65c:	e50b3054 	str	r3, [r11, #-84]	; 0xffffffac
if(switch_value != old_switch_value) {
     660:	e51b2054 	ldr	r2, [r11, #-84]	; 0xffffffac
     664:	e51b3018 	ldr	r3, [r11, #-24]	; 0xffffffe8
     668:	e1520003 	cmp	r2, r3
     66c:	0a000007 	beq	690 <main+0x278>
    *(component_op3) = 1;// write op1 data to the component
     670:	e51b303c 	ldr	r3, [r11, #-60]	; 0xffffffc4
     674:	e3a02001 	mov	r2, #1
     678:	e5832000 	str	r2, [r3]
    *(component_op2) = switch_value;
     67c:	e51b3038 	ldr	r3, [r11, #-56]	; 0xffffffc8
     680:	e51b2054 	ldr	r2, [r11, #-84]	; 0xffffffac
     684:	e5832000 	str	r2, [r3]
    old_switch_value = switch_value;
     688:	e51b3054 	ldr	r3, [r11, #-84]	; 0xffffffac
     68c:	e50b3018 	str	r3, [r11, #-24]	; 0xffffffe8
}
component_value = *(component_op1); // read component data (any address will do)
     690:	e51b3034 	ldr	r3, [r11, #-52]	; 0xffffffcc
     694:	e5933000 	ldr	r3, [r3]
     698:	e50b305c 	str	r3, [r11, #-92]	; 0xffffffa4
*(led) = component_value;
     69c:	e51b3040 	ldr	r3, [r11, #-64]	; 0xffffffc0
     6a0:	e51b205c 	ldr	r2, [r11, #-92]	; 0xffffffa4
     6a4:	e5832000 	str	r2, [r3]
}
     6a8:	eaffff89 	b	4d4 <main+0xbc>

000006ac <atexit>:
     6ac:	e1a01000 	mov	r1, r0
     6b0:	e3a00000 	mov	r0, #0
     6b4:	e92d4008 	push	{r3, lr}
     6b8:	e1a02000 	mov	r2, r0
     6bc:	e1a03000 	mov	r3, r0
     6c0:	eb000018 	bl	728 <__register_exitproc>
     6c4:	e8bd4008 	pop	{r3, lr}
     6c8:	e12fff1e 	bx	lr

000006cc <exit>:
     6cc:	e92d4008 	push	{r3, lr}
     6d0:	e3a01000 	mov	r1, #0
     6d4:	e1a04000 	mov	r4, r0
     6d8:	eb00004f 	bl	81c <__call_exitprocs>
     6dc:	e59f3018 	ldr	r3, [pc, #24]	; 6fc <exit+0x30>
     6e0:	e5930000 	ldr	r0, [r3]
     6e4:	e590303c 	ldr	r3, [r0, #60]	; 0x3c
     6e8:	e3530000 	cmp	r3, #0
     6ec:	11a0e00f 	movne	lr, pc
     6f0:	112fff13 	bxne	r3
     6f4:	e1a00004 	mov	r0, r4
     6f8:	eb0003fd 	bl	16f4 <_exit>
     6fc:	00001880 	.word	0x00001880

00000700 <gettimeofday>:
     700:	e1a02001 	mov	r2, r1
     704:	e59f1018 	ldr	r1, [pc, #24]	; 724 <gettimeofday+0x24>
     708:	e92d4008 	push	{r3, lr}
     70c:	e1a03000 	mov	r3, r0
     710:	e5910000 	ldr	r0, [r1]
     714:	e1a01003 	mov	r1, r3
     718:	eb0000b8 	bl	a00 <_gettimeofday_r>
     71c:	e8bd4008 	pop	{r3, lr}
     720:	e12fff1e 	bx	lr
     724:	000018e0 	.word	0x000018e0

00000728 <__register_exitproc>:
     728:	e59fc0e4 	ldr	r12, [pc, #228]	; 814 <__register_exitproc+0xec>
     72c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
     730:	e59c4000 	ldr	r4, [r12]
     734:	e594c148 	ldr	r12, [r4, #328]	; 0x148
     738:	e35c0000 	cmp	r12, #0
     73c:	0284cf53 	addeq	r12, r4, #332	; 0x14c
     740:	e59c5004 	ldr	r5, [r12, #4]
     744:	0584c148 	streq	r12, [r4, #328]	; 0x148
     748:	e355001f 	cmp	r5, #31
     74c:	e24dd010 	sub	sp, sp, #16
     750:	e1a06000 	mov	r6, r0
     754:	da000015 	ble	7b0 <__register_exitproc+0x88>
     758:	e59f00b8 	ldr	r0, [pc, #184]	; 818 <__register_exitproc+0xf0>
     75c:	e3500000 	cmp	r0, #0
     760:	1a000001 	bne	76c <__register_exitproc+0x44>
     764:	e3e00000 	mvn	r0, #0
     768:	ea000018 	b	7d0 <__register_exitproc+0xa8>
     76c:	e3a00e19 	mov	r0, #400	; 0x190
     770:	e58d100c 	str	r1, [sp, #12]
     774:	e58d2008 	str	r2, [sp, #8]
     778:	e58d3004 	str	r3, [sp, #4]
     77c:	e320f000 	nop	{0}
     780:	e250c000 	subs	r12, r0, #0
     784:	e59d100c 	ldr	r1, [sp, #12]
     788:	e59d2008 	ldr	r2, [sp, #8]
     78c:	e59d3004 	ldr	r3, [sp, #4]
     790:	0afffff3 	beq	764 <__register_exitproc+0x3c>
     794:	e5945148 	ldr	r5, [r4, #328]	; 0x148
     798:	e3a00000 	mov	r0, #0
     79c:	e58c0004 	str	r0, [r12, #4]
     7a0:	e58c5000 	str	r5, [r12]
     7a4:	e584c148 	str	r12, [r4, #328]	; 0x148
     7a8:	e58c0188 	str	r0, [r12, #392]	; 0x188
     7ac:	e58c018c 	str	r0, [r12, #396]	; 0x18c
     7b0:	e3560000 	cmp	r6, #0
     7b4:	e59c4004 	ldr	r4, [r12, #4]
     7b8:	1a000007 	bne	7dc <__register_exitproc+0xb4>
     7bc:	e2843002 	add	r3, r4, #2
     7c0:	e2844001 	add	r4, r4, #1
     7c4:	e78c1103 	str	r1, [r12, r3, lsl #2]
     7c8:	e58c4004 	str	r4, [r12, #4]
     7cc:	e3a00000 	mov	r0, #0
     7d0:	e28dd010 	add	sp, sp, #16
     7d4:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
     7d8:	e12fff1e 	bx	lr
     7dc:	e3a00001 	mov	r0, #1
     7e0:	e1a00410 	lsl	r0, r0, r4
     7e4:	e08c8104 	add	r8, r12, r4, lsl #2
     7e8:	e3560002 	cmp	r6, #2
     7ec:	e59c7188 	ldr	r7, [r12, #392]	; 0x188
     7f0:	e5883108 	str	r3, [r8, #264]	; 0x108
     7f4:	059c318c 	ldreq	r3, [r12, #396]	; 0x18c
     7f8:	e1877000 	orr	r7, r7, r0
     7fc:	01830000 	orreq	r0, r3, r0
     800:	e1a05008 	mov	r5, r8
     804:	e5882088 	str	r2, [r8, #136]	; 0x88
     808:	e58c7188 	str	r7, [r12, #392]	; 0x188
     80c:	058c018c 	streq	r0, [r12, #396]	; 0x18c
     810:	eaffffe9 	b	7bc <__register_exitproc+0x94>
     814:	00001880 	.word	0x00001880
     818:	00000000 	.word	0x00000000

0000081c <__call_exitprocs>:
     81c:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, r10, r11, lr}
     820:	e59f3168 	ldr	r3, [pc, #360]	; 990 <__call_exitprocs+0x174>
     824:	e5933000 	ldr	r3, [r3]
     828:	e24dd014 	sub	sp, sp, #20
     82c:	e58d3004 	str	r3, [sp, #4]
     830:	e2833f52 	add	r3, r3, #328	; 0x148
     834:	e58d0008 	str	r0, [sp, #8]
     838:	e58d300c 	str	r3, [sp, #12]
     83c:	e1a07001 	mov	r7, r1
     840:	e3a08001 	mov	r8, #1
     844:	e59d3004 	ldr	r3, [sp, #4]
     848:	e5936148 	ldr	r6, [r3, #328]	; 0x148
     84c:	e3560000 	cmp	r6, #0
     850:	e59db00c 	ldr	r11, [sp, #12]
     854:	0a000033 	beq	928 <__call_exitprocs+0x10c>
     858:	e5965004 	ldr	r5, [r6, #4]
     85c:	e2554001 	subs	r4, r5, #1
     860:	5286a088 	addpl	r10, r6, #136	; 0x88
     864:	5285501f 	addpl	r5, r5, #31
     868:	508a5105 	addpl	r5, r10, r5, lsl #2
     86c:	5a000007 	bpl	890 <__call_exitprocs+0x74>
     870:	ea000029 	b	91c <__call_exitprocs+0x100>
     874:	e5953000 	ldr	r3, [r5]
     878:	e1530007 	cmp	r3, r7
     87c:	0a000005 	beq	898 <__call_exitprocs+0x7c>
     880:	e2444001 	sub	r4, r4, #1
     884:	e3740001 	cmn	r4, #1
     888:	e2455004 	sub	r5, r5, #4
     88c:	0a000022 	beq	91c <__call_exitprocs+0x100>
     890:	e3570000 	cmp	r7, #0
     894:	1afffff6 	bne	874 <__call_exitprocs+0x58>
     898:	e5963004 	ldr	r3, [r6, #4]
     89c:	e06a2005 	rsb	r2, r10, r5
     8a0:	e2433001 	sub	r3, r3, #1
     8a4:	e0862002 	add	r2, r6, r2
     8a8:	e1530004 	cmp	r3, r4
     8ac:	e5123078 	ldr	r3, [r2, #-120]	; 0xffffff88
     8b0:	13a01000 	movne	r1, #0
     8b4:	05864004 	streq	r4, [r6, #4]
     8b8:	15021078 	strne	r1, [r2, #-120]	; 0xffffff88
     8bc:	e3530000 	cmp	r3, #0
     8c0:	0affffee 	beq	880 <__call_exitprocs+0x64>
     8c4:	e1a02418 	lsl	r2, r8, r4
     8c8:	e5961188 	ldr	r1, [r6, #392]	; 0x188
     8cc:	e1120001 	tst	r2, r1
     8d0:	e5969004 	ldr	r9, [r6, #4]
     8d4:	0a000016 	beq	934 <__call_exitprocs+0x118>
     8d8:	e596118c 	ldr	r1, [r6, #396]	; 0x18c
     8dc:	e1120001 	tst	r2, r1
     8e0:	1a000016 	bne	940 <__call_exitprocs+0x124>
     8e4:	e59d0008 	ldr	r0, [sp, #8]
     8e8:	e5151080 	ldr	r1, [r5, #-128]	; 0xffffff80
     8ec:	e1a0e00f 	mov	lr, pc
     8f0:	e12fff13 	bx	r3
     8f4:	e5963004 	ldr	r3, [r6, #4]
     8f8:	e1530009 	cmp	r3, r9
     8fc:	1affffd0 	bne	844 <__call_exitprocs+0x28>
     900:	e59b3000 	ldr	r3, [r11]
     904:	e1530006 	cmp	r3, r6
     908:	1affffcd 	bne	844 <__call_exitprocs+0x28>
     90c:	e2444001 	sub	r4, r4, #1
     910:	e3740001 	cmn	r4, #1
     914:	e2455004 	sub	r5, r5, #4
     918:	1affffdc 	bne	890 <__call_exitprocs+0x74>
     91c:	e59f1070 	ldr	r1, [pc, #112]	; 994 <__call_exitprocs+0x178>
     920:	e3510000 	cmp	r1, #0
     924:	1a000009 	bne	950 <__call_exitprocs+0x134>
     928:	e28dd014 	add	sp, sp, #20
     92c:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, r10, r11, lr}
     930:	e12fff1e 	bx	lr
     934:	e1a0e00f 	mov	lr, pc
     938:	e12fff13 	bx	r3
     93c:	eaffffec 	b	8f4 <__call_exitprocs+0xd8>
     940:	e5150080 	ldr	r0, [r5, #-128]	; 0xffffff80
     944:	e1a0e00f 	mov	lr, pc
     948:	e12fff13 	bx	r3
     94c:	eaffffe8 	b	8f4 <__call_exitprocs+0xd8>
     950:	e5963004 	ldr	r3, [r6, #4]
     954:	e3530000 	cmp	r3, #0
     958:	e5963000 	ldr	r3, [r6]
     95c:	1a000008 	bne	984 <__call_exitprocs+0x168>
     960:	e3530000 	cmp	r3, #0
     964:	0a000006 	beq	984 <__call_exitprocs+0x168>
     968:	e1a00006 	mov	r0, r6
     96c:	e58b3000 	str	r3, [r11]
     970:	e320f000 	nop	{0}
     974:	e59b6000 	ldr	r6, [r11]
     978:	e3560000 	cmp	r6, #0
     97c:	1affffb5 	bne	858 <__call_exitprocs+0x3c>
     980:	eaffffe8 	b	928 <__call_exitprocs+0x10c>
     984:	e1a0b006 	mov	r11, r6
     988:	e1a06003 	mov	r6, r3
     98c:	eafffff9 	b	978 <__call_exitprocs+0x15c>
     990:	00001880 	.word	0x00001880
     994:	00000000 	.word	0x00000000

00000998 <register_fini>:
     998:	e92d4008 	push	{r3, lr}
     99c:	e59f3010 	ldr	r3, [pc, #16]	; 9b4 <register_fini+0x1c>
     9a0:	e3530000 	cmp	r3, #0
     9a4:	159f000c 	ldrne	r0, [pc, #12]	; 9b8 <register_fini+0x20>
     9a8:	1bffff3f 	blne	6ac <atexit>
     9ac:	e8bd4008 	pop	{r3, lr}
     9b0:	e12fff1e 	bx	lr
     9b4:	000018a8 	.word	0x000018a8
     9b8:	000009bc 	.word	0x000009bc

000009bc <__libc_fini_array>:
     9bc:	e92d4038 	push	{r3, r4, r5, lr}
     9c0:	e59f5030 	ldr	r5, [pc, #48]	; 9f8 <__libc_fini_array+0x3c>
     9c4:	e59f4030 	ldr	r4, [pc, #48]	; 9fc <__libc_fini_array+0x40>
     9c8:	e0654004 	rsb	r4, r5, r4
     9cc:	e1b04144 	asrs	r4, r4, #2
     9d0:	10855104 	addne	r5, r5, r4, lsl #2
     9d4:	0a000004 	beq	9ec <__libc_fini_array+0x30>
     9d8:	e5353004 	ldr	r3, [r5, #-4]!
     9dc:	e1a0e00f 	mov	lr, pc
     9e0:	e12fff13 	bx	r3
     9e4:	e2544001 	subs	r4, r4, #1
     9e8:	1afffffa 	bne	9d8 <__libc_fini_array+0x1c>
     9ec:	eb0003ad 	bl	18a8 <__libc_fini>
     9f0:	e8bd4038 	pop	{r3, r4, r5, lr}
     9f4:	e12fff1e 	bx	lr
     9f8:	000018c0 	.word	0x000018c0
     9fc:	000018c4 	.word	0x000018c4

00000a00 <_gettimeofday_r>:
     a00:	e92d4038 	push	{r3, r4, r5, lr}
     a04:	e59f4030 	ldr	r4, [pc, #48]	; a3c <_gettimeofday_r+0x3c>
     a08:	e3a03000 	mov	r3, #0
     a0c:	e1a05000 	mov	r5, r0
     a10:	e1a00001 	mov	r0, r1
     a14:	e1a01002 	mov	r1, r2
     a18:	e5843000 	str	r3, [r4]
     a1c:	eb00033a 	bl	170c <_gettimeofday>
     a20:	e3700001 	cmn	r0, #1
     a24:	1a000002 	bne	a34 <_gettimeofday_r+0x34>
     a28:	e5943000 	ldr	r3, [r4]
     a2c:	e3530000 	cmp	r3, #0
     a30:	15853000 	strne	r3, [r5]
     a34:	e8bd4038 	pop	{r3, r4, r5, lr}
     a38:	e12fff1e 	bx	lr
     a3c:	00002144 	.word	0x00002144

00000a40 <cleanup_glue>:
     a40:	e92d4038 	push	{r3, r4, r5, lr}
     a44:	e1a04001 	mov	r4, r1
     a48:	e5911000 	ldr	r1, [r1]
     a4c:	e3510000 	cmp	r1, #0
     a50:	e1a05000 	mov	r5, r0
     a54:	1bfffff9 	blne	a40 <cleanup_glue>
     a58:	e1a00005 	mov	r0, r5
     a5c:	e1a01004 	mov	r1, r4
     a60:	eb00009c 	bl	cd8 <_free_r>
     a64:	e8bd4038 	pop	{r3, r4, r5, lr}
     a68:	e12fff1e 	bx	lr

00000a6c <_reclaim_reent>:
     a6c:	e59f30f0 	ldr	r3, [pc, #240]	; b64 <_reclaim_reent+0xf8>
     a70:	e5933000 	ldr	r3, [r3]
     a74:	e1500003 	cmp	r0, r3
     a78:	e92d4070 	push	{r4, r5, r6, lr}
     a7c:	e1a05000 	mov	r5, r0
     a80:	0a00002b 	beq	b34 <_reclaim_reent+0xc8>
     a84:	e590204c 	ldr	r2, [r0, #76]	; 0x4c
     a88:	e3520000 	cmp	r2, #0
     a8c:	0a000011 	beq	ad8 <_reclaim_reent+0x6c>
     a90:	e3a03000 	mov	r3, #0
     a94:	e1a06003 	mov	r6, r3
     a98:	e7921103 	ldr	r1, [r2, r3, lsl #2]
     a9c:	e3510000 	cmp	r1, #0
     aa0:	0a000005 	beq	abc <_reclaim_reent+0x50>
     aa4:	e5914000 	ldr	r4, [r1]
     aa8:	e1a00005 	mov	r0, r5
     aac:	eb000089 	bl	cd8 <_free_r>
     ab0:	e2541000 	subs	r1, r4, #0
     ab4:	1afffffa 	bne	aa4 <_reclaim_reent+0x38>
     ab8:	e595204c 	ldr	r2, [r5, #76]	; 0x4c
     abc:	e2866001 	add	r6, r6, #1
     ac0:	e3560020 	cmp	r6, #32
     ac4:	e1a03006 	mov	r3, r6
     ac8:	1afffff2 	bne	a98 <_reclaim_reent+0x2c>
     acc:	e1a00005 	mov	r0, r5
     ad0:	e1a01002 	mov	r1, r2
     ad4:	eb00007f 	bl	cd8 <_free_r>
     ad8:	e5951040 	ldr	r1, [r5, #64]	; 0x40
     adc:	e3510000 	cmp	r1, #0
     ae0:	11a00005 	movne	r0, r5
     ae4:	1b00007b 	blne	cd8 <_free_r>
     ae8:	e5951148 	ldr	r1, [r5, #328]	; 0x148
     aec:	e3510000 	cmp	r1, #0
     af0:	0a000008 	beq	b18 <_reclaim_reent+0xac>
     af4:	e2856f53 	add	r6, r5, #332	; 0x14c
     af8:	e1510006 	cmp	r1, r6
     afc:	0a000005 	beq	b18 <_reclaim_reent+0xac>
     b00:	e5914000 	ldr	r4, [r1]
     b04:	e1a00005 	mov	r0, r5
     b08:	eb000072 	bl	cd8 <_free_r>
     b0c:	e1560004 	cmp	r6, r4
     b10:	e1a01004 	mov	r1, r4
     b14:	1afffff9 	bne	b00 <_reclaim_reent+0x94>
     b18:	e5951054 	ldr	r1, [r5, #84]	; 0x54
     b1c:	e3510000 	cmp	r1, #0
     b20:	11a00005 	movne	r0, r5
     b24:	1b00006b 	blne	cd8 <_free_r>
     b28:	e5953038 	ldr	r3, [r5, #56]	; 0x38
     b2c:	e3530000 	cmp	r3, #0
     b30:	1a000001 	bne	b3c <_reclaim_reent+0xd0>
     b34:	e8bd4070 	pop	{r4, r5, r6, lr}
     b38:	e12fff1e 	bx	lr
     b3c:	e1a00005 	mov	r0, r5
     b40:	e595c03c 	ldr	r12, [r5, #60]	; 0x3c
     b44:	e1a0e00f 	mov	lr, pc
     b48:	e12fff1c 	bx	r12
     b4c:	e59512e0 	ldr	r1, [r5, #736]	; 0x2e0
     b50:	e3510000 	cmp	r1, #0
     b54:	0afffff6 	beq	b34 <_reclaim_reent+0xc8>
     b58:	e1a00005 	mov	r0, r5
     b5c:	e8bd4070 	pop	{r4, r5, r6, lr}
     b60:	eaffffb6 	b	a40 <cleanup_glue>
     b64:	000018e0 	.word	0x000018e0

00000b68 <_wrapup_reent>:
     b68:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
     b6c:	e2507000 	subs	r7, r0, #0
     b70:	059f3060 	ldreq	r3, [pc, #96]	; bd8 <_wrapup_reent+0x70>
     b74:	05937000 	ldreq	r7, [r3]
     b78:	e5976148 	ldr	r6, [r7, #328]	; 0x148
     b7c:	e3560000 	cmp	r6, #0
     b80:	0a00000d 	beq	bbc <_wrapup_reent+0x54>
     b84:	e5965004 	ldr	r5, [r6, #4]
     b88:	e2554001 	subs	r4, r5, #1
     b8c:	52855002 	addpl	r5, r5, #2
     b90:	50865105 	addpl	r5, r6, r5, lsl #2
     b94:	4a000005 	bmi	bb0 <_wrapup_reent+0x48>
     b98:	e5353004 	ldr	r3, [r5, #-4]!
     b9c:	e2444001 	sub	r4, r4, #1
     ba0:	e1a0e00f 	mov	lr, pc
     ba4:	e12fff13 	bx	r3
     ba8:	e3740001 	cmn	r4, #1
     bac:	1afffff9 	bne	b98 <_wrapup_reent+0x30>
     bb0:	e5966000 	ldr	r6, [r6]
     bb4:	e3560000 	cmp	r6, #0
     bb8:	1afffff1 	bne	b84 <_wrapup_reent+0x1c>
     bbc:	e597303c 	ldr	r3, [r7, #60]	; 0x3c
     bc0:	e3530000 	cmp	r3, #0
     bc4:	11a00007 	movne	r0, r7
     bc8:	11a0e00f 	movne	lr, pc
     bcc:	112fff13 	bxne	r3
     bd0:	e8bd40f8 	pop	{r3, r4, r5, r6, r7, lr}
     bd4:	e12fff1e 	bx	lr
     bd8:	000018e0 	.word	0x000018e0

00000bdc <_malloc_trim_r>:
     bdc:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
     be0:	e59f50e4 	ldr	r5, [pc, #228]	; ccc <_malloc_trim_r+0xf0>
     be4:	e1a07001 	mov	r7, r1
     be8:	e1a04000 	mov	r4, r0
     bec:	eb00029b 	bl	1660 <__malloc_lock>
     bf0:	e5953008 	ldr	r3, [r5, #8]
     bf4:	e5936004 	ldr	r6, [r3, #4]
     bf8:	e3c66003 	bic	r6, r6, #3
     bfc:	e2863efe 	add	r3, r6, #4064	; 0xfe0
     c00:	e283300f 	add	r3, r3, #15
     c04:	e0677003 	rsb	r7, r7, r3
     c08:	e1a07627 	lsr	r7, r7, #12
     c0c:	e2477001 	sub	r7, r7, #1
     c10:	e1a07607 	lsl	r7, r7, #12
     c14:	e3570a01 	cmp	r7, #4096	; 0x1000
     c18:	ba000006 	blt	c38 <_malloc_trim_r+0x5c>
     c1c:	e1a00004 	mov	r0, r4
     c20:	e3a01000 	mov	r1, #0
     c24:	eb00028f 	bl	1668 <_sbrk_r>
     c28:	e5953008 	ldr	r3, [r5, #8]
     c2c:	e0833006 	add	r3, r3, r6
     c30:	e1500003 	cmp	r0, r3
     c34:	0a000004 	beq	c4c <_malloc_trim_r+0x70>
     c38:	e1a00004 	mov	r0, r4
     c3c:	eb000288 	bl	1664 <__malloc_unlock>
     c40:	e3a00000 	mov	r0, #0
     c44:	e8bd40f8 	pop	{r3, r4, r5, r6, r7, lr}
     c48:	e12fff1e 	bx	lr
     c4c:	e1a00004 	mov	r0, r4
     c50:	e2671000 	rsb	r1, r7, #0
     c54:	eb000283 	bl	1668 <_sbrk_r>
     c58:	e3700001 	cmn	r0, #1
     c5c:	0a00000b 	beq	c90 <_malloc_trim_r+0xb4>
     c60:	e59f3068 	ldr	r3, [pc, #104]	; cd0 <_malloc_trim_r+0xf4>
     c64:	e5952008 	ldr	r2, [r5, #8]
     c68:	e5931000 	ldr	r1, [r3]
     c6c:	e0676006 	rsb	r6, r7, r6
     c70:	e3866001 	orr	r6, r6, #1
     c74:	e0677001 	rsb	r7, r7, r1
     c78:	e1a00004 	mov	r0, r4
     c7c:	e5826004 	str	r6, [r2, #4]
     c80:	e5837000 	str	r7, [r3]
     c84:	eb000276 	bl	1664 <__malloc_unlock>
     c88:	e3a00001 	mov	r0, #1
     c8c:	eaffffec 	b	c44 <_malloc_trim_r+0x68>
     c90:	e1a00004 	mov	r0, r4
     c94:	e3a01000 	mov	r1, #0
     c98:	eb000272 	bl	1668 <_sbrk_r>
     c9c:	e5953008 	ldr	r3, [r5, #8]
     ca0:	e0632000 	rsb	r2, r3, r0
     ca4:	e352000f 	cmp	r2, #15
     ca8:	daffffe2 	ble	c38 <_malloc_trim_r+0x5c>
     cac:	e59f1020 	ldr	r1, [pc, #32]	; cd4 <_malloc_trim_r+0xf8>
     cb0:	e5911000 	ldr	r1, [r1]
     cb4:	e0610000 	rsb	r0, r1, r0
     cb8:	e59f1010 	ldr	r1, [pc, #16]	; cd0 <_malloc_trim_r+0xf4>
     cbc:	e3822001 	orr	r2, r2, #1
     cc0:	e5810000 	str	r0, [r1]
     cc4:	e5832004 	str	r2, [r3, #4]
     cc8:	eaffffda 	b	c38 <_malloc_trim_r+0x5c>
     ccc:	00001d10 	.word	0x00001d10
     cd0:	0000214c 	.word	0x0000214c
     cd4:	00002118 	.word	0x00002118

00000cd8 <_free_r>:
     cd8:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
     cdc:	e2514000 	subs	r4, r1, #0
     ce0:	e1a06000 	mov	r6, r0
     ce4:	0a000046 	beq	e04 <_free_r+0x12c>
     ce8:	eb00025c 	bl	1660 <__malloc_lock>
     cec:	e514e004 	ldr	lr, [r4, #-4]
     cf0:	e59f1238 	ldr	r1, [pc, #568]	; f30 <_free_r+0x258>
     cf4:	e244c008 	sub	r12, r4, #8
     cf8:	e3ce3001 	bic	r3, lr, #1
     cfc:	e08c2003 	add	r2, r12, r3
     d00:	e5910008 	ldr	r0, [r1, #8]
     d04:	e5925004 	ldr	r5, [r2, #4]
     d08:	e1500002 	cmp	r0, r2
     d0c:	e3c55003 	bic	r5, r5, #3
     d10:	0a00004a 	beq	e40 <_free_r+0x168>
     d14:	e21ee001 	ands	lr, lr, #1
     d18:	e5825004 	str	r5, [r2, #4]
     d1c:	13a0e000 	movne	lr, #0
     d20:	1a000009 	bne	d4c <_free_r+0x74>
     d24:	e5144008 	ldr	r4, [r4, #-8]
     d28:	e064c00c 	rsb	r12, r4, r12
     d2c:	e59c0008 	ldr	r0, [r12, #8]
     d30:	e2817008 	add	r7, r1, #8
     d34:	e1500007 	cmp	r0, r7
     d38:	e0833004 	add	r3, r3, r4
     d3c:	159c400c 	ldrne	r4, [r12, #12]
     d40:	1580400c 	strne	r4, [r0, #12]
     d44:	15840008 	strne	r0, [r4, #8]
     d48:	03a0e001 	moveq	lr, #1
     d4c:	e0820005 	add	r0, r2, r5
     d50:	e5900004 	ldr	r0, [r0, #4]
     d54:	e3100001 	tst	r0, #1
     d58:	1a000009 	bne	d84 <_free_r+0xac>
     d5c:	e35e0000 	cmp	lr, #0
     d60:	e5920008 	ldr	r0, [r2, #8]
     d64:	e0833005 	add	r3, r3, r5
     d68:	1a000002 	bne	d78 <_free_r+0xa0>
     d6c:	e59f41c0 	ldr	r4, [pc, #448]	; f34 <_free_r+0x25c>
     d70:	e1500004 	cmp	r0, r4
     d74:	0a000047 	beq	e98 <_free_r+0x1c0>
     d78:	e592200c 	ldr	r2, [r2, #12]
     d7c:	e580200c 	str	r2, [r0, #12]
     d80:	e5820008 	str	r0, [r2, #8]
     d84:	e3832001 	orr	r2, r3, #1
     d88:	e35e0000 	cmp	lr, #0
     d8c:	e58c2004 	str	r2, [r12, #4]
     d90:	e78c3003 	str	r3, [r12, r3]
     d94:	1a000018 	bne	dfc <_free_r+0x124>
     d98:	e3530c02 	cmp	r3, #512	; 0x200
     d9c:	3a00001a 	bcc	e0c <_free_r+0x134>
     da0:	e1a024a3 	lsr	r2, r3, #9
     da4:	e3520004 	cmp	r2, #4
     da8:	8a000042 	bhi	eb8 <_free_r+0x1e0>
     dac:	e1a0e323 	lsr	lr, r3, #6
     db0:	e28ee038 	add	lr, lr, #56	; 0x38
     db4:	e1a0008e 	lsl	r0, lr, #1
     db8:	e0810100 	add	r0, r1, r0, lsl #2
     dbc:	e5902008 	ldr	r2, [r0, #8]
     dc0:	e1520000 	cmp	r2, r0
     dc4:	e59f1164 	ldr	r1, [pc, #356]	; f30 <_free_r+0x258>
     dc8:	0a000044 	beq	ee0 <_free_r+0x208>
     dcc:	e5921004 	ldr	r1, [r2, #4]
     dd0:	e3c11003 	bic	r1, r1, #3
     dd4:	e1530001 	cmp	r3, r1
     dd8:	2a000002 	bcs	de8 <_free_r+0x110>
     ddc:	e5922008 	ldr	r2, [r2, #8]
     de0:	e1500002 	cmp	r0, r2
     de4:	1afffff8 	bne	dcc <_free_r+0xf4>
     de8:	e592300c 	ldr	r3, [r2, #12]
     dec:	e58c300c 	str	r3, [r12, #12]
     df0:	e58c2008 	str	r2, [r12, #8]
     df4:	e582c00c 	str	r12, [r2, #12]
     df8:	e583c008 	str	r12, [r3, #8]
     dfc:	e1a00006 	mov	r0, r6
     e00:	eb000217 	bl	1664 <__malloc_unlock>
     e04:	e8bd40f8 	pop	{r3, r4, r5, r6, r7, lr}
     e08:	e12fff1e 	bx	lr
     e0c:	e5912004 	ldr	r2, [r1, #4]
     e10:	e1a031a3 	lsr	r3, r3, #3
     e14:	e1a00143 	asr	r0, r3, #2
     e18:	e3a0e001 	mov	lr, #1
     e1c:	e182001e 	orr	r0, r2, lr, lsl r0
     e20:	e0813183 	add	r3, r1, r3, lsl #3
     e24:	e5932008 	ldr	r2, [r3, #8]
     e28:	e58c300c 	str	r3, [r12, #12]
     e2c:	e58c2008 	str	r2, [r12, #8]
     e30:	e5810004 	str	r0, [r1, #4]
     e34:	e583c008 	str	r12, [r3, #8]
     e38:	e582c00c 	str	r12, [r2, #12]
     e3c:	eaffffee 	b	dfc <_free_r+0x124>
     e40:	e31e0001 	tst	lr, #1
     e44:	e0853003 	add	r3, r5, r3
     e48:	1a000006 	bne	e68 <_free_r+0x190>
     e4c:	e5142008 	ldr	r2, [r4, #-8]
     e50:	e062c00c 	rsb	r12, r2, r12
     e54:	e59c000c 	ldr	r0, [r12, #12]
     e58:	e59ce008 	ldr	lr, [r12, #8]
     e5c:	e58e000c 	str	r0, [lr, #12]
     e60:	e580e008 	str	lr, [r0, #8]
     e64:	e0833002 	add	r3, r3, r2
     e68:	e59f20c8 	ldr	r2, [pc, #200]	; f38 <_free_r+0x260>
     e6c:	e5920000 	ldr	r0, [r2]
     e70:	e3832001 	orr	r2, r3, #1
     e74:	e1530000 	cmp	r3, r0
     e78:	e58c2004 	str	r2, [r12, #4]
     e7c:	e581c008 	str	r12, [r1, #8]
     e80:	3affffdd 	bcc	dfc <_free_r+0x124>
     e84:	e59f30b0 	ldr	r3, [pc, #176]	; f3c <_free_r+0x264>
     e88:	e1a00006 	mov	r0, r6
     e8c:	e5931000 	ldr	r1, [r3]
     e90:	ebffff51 	bl	bdc <_malloc_trim_r>
     e94:	eaffffd8 	b	dfc <_free_r+0x124>
     e98:	e3832001 	orr	r2, r3, #1
     e9c:	e581c014 	str	r12, [r1, #20]
     ea0:	e581c010 	str	r12, [r1, #16]
     ea4:	e58c000c 	str	r0, [r12, #12]
     ea8:	e58c0008 	str	r0, [r12, #8]
     eac:	e58c2004 	str	r2, [r12, #4]
     eb0:	e78c3003 	str	r3, [r12, r3]
     eb4:	eaffffd0 	b	dfc <_free_r+0x124>
     eb8:	e3520014 	cmp	r2, #20
     ebc:	9282e05b 	addls	lr, r2, #91	; 0x5b
     ec0:	91a0008e 	lslls	r0, lr, #1
     ec4:	9affffbb 	bls	db8 <_free_r+0xe0>
     ec8:	e3520054 	cmp	r2, #84	; 0x54
     ecc:	8a00000a 	bhi	efc <_free_r+0x224>
     ed0:	e1a0e623 	lsr	lr, r3, #12
     ed4:	e28ee06e 	add	lr, lr, #110	; 0x6e
     ed8:	e1a0008e 	lsl	r0, lr, #1
     edc:	eaffffb5 	b	db8 <_free_r+0xe0>
     ee0:	e5913004 	ldr	r3, [r1, #4]
     ee4:	e1a0e14e 	asr	lr, lr, #2
     ee8:	e3a00001 	mov	r0, #1
     eec:	e1830e10 	orr	r0, r3, r0, lsl lr
     ef0:	e1a03002 	mov	r3, r2
     ef4:	e5810004 	str	r0, [r1, #4]
     ef8:	eaffffbb 	b	dec <_free_r+0x114>
     efc:	e3520f55 	cmp	r2, #340	; 0x154
     f00:	91a0e7a3 	lsrls	lr, r3, #15
     f04:	928ee077 	addls	lr, lr, #119	; 0x77
     f08:	91a0008e 	lslls	r0, lr, #1
     f0c:	9affffa9 	bls	db8 <_free_r+0xe0>
     f10:	e59f0028 	ldr	r0, [pc, #40]	; f40 <_free_r+0x268>
     f14:	e1520000 	cmp	r2, r0
     f18:	91a0e923 	lsrls	lr, r3, #18
     f1c:	928ee07c 	addls	lr, lr, #124	; 0x7c
     f20:	91a0008e 	lslls	r0, lr, #1
     f24:	83a000fc 	movhi	r0, #252	; 0xfc
     f28:	83a0e07e 	movhi	lr, #126	; 0x7e
     f2c:	eaffffa1 	b	db8 <_free_r+0xe0>
     f30:	00001d10 	.word	0x00001d10
     f34:	00001d18 	.word	0x00001d18
     f38:	0000211c 	.word	0x0000211c
     f3c:	00002148 	.word	0x00002148
     f40:	00000554 	.word	0x00000554

00000f44 <_malloc_r>:
     f44:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, r10, r11, lr}
     f48:	e281500b 	add	r5, r1, #11
     f4c:	e3550016 	cmp	r5, #22
     f50:	83c55007 	bichi	r5, r5, #7
     f54:	81a03fa5 	lsrhi	r3, r5, #31
     f58:	93a03000 	movls	r3, #0
     f5c:	93a05010 	movls	r5, #16
     f60:	e1550001 	cmp	r5, r1
     f64:	21a01003 	movcs	r1, r3
     f68:	33831001 	orrcc	r1, r3, #1
     f6c:	e3510000 	cmp	r1, #0
     f70:	13a0300c 	movne	r3, #12
     f74:	e24dd00c 	sub	sp, sp, #12
     f78:	e1a06000 	mov	r6, r0
     f7c:	15803000 	strne	r3, [r0]
     f80:	13a04000 	movne	r4, #0
     f84:	1a000015 	bne	fe0 <_malloc_r+0x9c>
     f88:	eb0001b4 	bl	1660 <__malloc_lock>
     f8c:	e3550f7e 	cmp	r5, #504	; 0x1f8
     f90:	2a000016 	bcs	ff0 <_malloc_r+0xac>
     f94:	e59f76b8 	ldr	r7, [pc, #1720]	; 1654 <_malloc_r+0x710>
     f98:	e1a0e1a5 	lsr	lr, r5, #3
     f9c:	e087318e 	add	r3, r7, lr, lsl #3
     fa0:	e593400c 	ldr	r4, [r3, #12]
     fa4:	e1540003 	cmp	r4, r3
     fa8:	0a00014b 	beq	14dc <_malloc_r+0x598>
     fac:	e5943004 	ldr	r3, [r4, #4]
     fb0:	e3c33003 	bic	r3, r3, #3
     fb4:	e0843003 	add	r3, r4, r3
     fb8:	e5930004 	ldr	r0, [r3, #4]
     fbc:	e2841008 	add	r1, r4, #8
     fc0:	e8910006 	ldm	r1, {r1, r2}
     fc4:	e3800001 	orr	r0, r0, #1
     fc8:	e5830004 	str	r0, [r3, #4]
     fcc:	e581200c 	str	r2, [r1, #12]
     fd0:	e5821008 	str	r1, [r2, #8]
     fd4:	e1a00006 	mov	r0, r6
     fd8:	eb0001a1 	bl	1664 <__malloc_unlock>
     fdc:	e2844008 	add	r4, r4, #8
     fe0:	e1a00004 	mov	r0, r4
     fe4:	e28dd00c 	add	sp, sp, #12
     fe8:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, r10, r11, lr}
     fec:	e12fff1e 	bx	lr
     ff0:	e1b0e4a5 	lsrs	lr, r5, #9
     ff4:	01a0e1a5 	lsreq	lr, r5, #3
     ff8:	01a0108e 	lsleq	r1, lr, #1
     ffc:	1a000061 	bne	1188 <_malloc_r+0x244>
    1000:	e59f764c 	ldr	r7, [pc, #1612]	; 1654 <_malloc_r+0x710>
    1004:	e0871101 	add	r1, r7, r1, lsl #2
    1008:	e591400c 	ldr	r4, [r1, #12]
    100c:	e1510004 	cmp	r1, r4
    1010:	1a000005 	bne	102c <_malloc_r+0xe8>
    1014:	ea00000a 	b	1044 <_malloc_r+0x100>
    1018:	e3530000 	cmp	r3, #0
    101c:	aa0000d7 	bge	1380 <_malloc_r+0x43c>
    1020:	e594400c 	ldr	r4, [r4, #12]
    1024:	e1510004 	cmp	r1, r4
    1028:	0a000005 	beq	1044 <_malloc_r+0x100>
    102c:	e5942004 	ldr	r2, [r4, #4]
    1030:	e3c22003 	bic	r2, r2, #3
    1034:	e0653002 	rsb	r3, r5, r2
    1038:	e353000f 	cmp	r3, #15
    103c:	dafffff5 	ble	1018 <_malloc_r+0xd4>
    1040:	e24ee001 	sub	lr, lr, #1
    1044:	e28ee001 	add	lr, lr, #1
    1048:	e59f3604 	ldr	r3, [pc, #1540]	; 1654 <_malloc_r+0x710>
    104c:	e5974010 	ldr	r4, [r7, #16]
    1050:	e2838008 	add	r8, r3, #8
    1054:	e1540008 	cmp	r4, r8
    1058:	05931004 	ldreq	r1, [r3, #4]
    105c:	0a000016 	beq	10bc <_malloc_r+0x178>
    1060:	e5942004 	ldr	r2, [r4, #4]
    1064:	e3c22003 	bic	r2, r2, #3
    1068:	e0651002 	rsb	r1, r5, r2
    106c:	e351000f 	cmp	r1, #15
    1070:	ca0000f7 	bgt	1454 <_malloc_r+0x510>
    1074:	e3510000 	cmp	r1, #0
    1078:	e5838014 	str	r8, [r3, #20]
    107c:	e5838010 	str	r8, [r3, #16]
    1080:	aa000046 	bge	11a0 <_malloc_r+0x25c>
    1084:	e3520c02 	cmp	r2, #512	; 0x200
    1088:	2a0000d2 	bcs	13d8 <_malloc_r+0x494>
    108c:	e5930004 	ldr	r0, [r3, #4]
    1090:	e1a021a2 	lsr	r2, r2, #3
    1094:	e1a01142 	asr	r1, r2, #2
    1098:	e3a0c001 	mov	r12, #1
    109c:	e180111c 	orr	r1, r0, r12, lsl r1
    10a0:	e0832182 	add	r2, r3, r2, lsl #3
    10a4:	e5920008 	ldr	r0, [r2, #8]
    10a8:	e584200c 	str	r2, [r4, #12]
    10ac:	e5840008 	str	r0, [r4, #8]
    10b0:	e5831004 	str	r1, [r3, #4]
    10b4:	e5824008 	str	r4, [r2, #8]
    10b8:	e580400c 	str	r4, [r0, #12]
    10bc:	e1a0014e 	asr	r0, lr, #2
    10c0:	e3a03001 	mov	r3, #1
    10c4:	e1a00013 	lsl	r0, r3, r0
    10c8:	e1500001 	cmp	r0, r1
    10cc:	8a00003b 	bhi	11c0 <_malloc_r+0x27c>
    10d0:	e1110000 	tst	r1, r0
    10d4:	1a000008 	bne	10fc <_malloc_r+0x1b8>
    10d8:	e1a00310 	lsl	r0, r0, r3
    10dc:	e3cee003 	bic	lr, lr, #3
    10e0:	e1110000 	tst	r1, r0
    10e4:	e28ee004 	add	lr, lr, #4
    10e8:	1a000003 	bne	10fc <_malloc_r+0x1b8>
    10ec:	e1a00080 	lsl	r0, r0, #1
    10f0:	e1110000 	tst	r1, r0
    10f4:	e28ee004 	add	lr, lr, #4
    10f8:	0afffffb 	beq	10ec <_malloc_r+0x1a8>
    10fc:	e087a18e 	add	r10, r7, lr, lsl #3
    1100:	e1a0c00a 	mov	r12, r10
    1104:	e1a0400e 	mov	r4, lr
    1108:	e59c300c 	ldr	r3, [r12, #12]
    110c:	e15c0003 	cmp	r12, r3
    1110:	1a000005 	bne	112c <_malloc_r+0x1e8>
    1114:	ea0000db 	b	1488 <_malloc_r+0x544>
    1118:	e3520000 	cmp	r2, #0
    111c:	aa0000f4 	bge	14f4 <_malloc_r+0x5b0>
    1120:	e593300c 	ldr	r3, [r3, #12]
    1124:	e15c0003 	cmp	r12, r3
    1128:	0a0000d6 	beq	1488 <_malloc_r+0x544>
    112c:	e5931004 	ldr	r1, [r3, #4]
    1130:	e3c11003 	bic	r1, r1, #3
    1134:	e0652001 	rsb	r2, r5, r1
    1138:	e352000f 	cmp	r2, #15
    113c:	dafffff5 	ble	1118 <_malloc_r+0x1d4>
    1140:	e1a04003 	mov	r4, r3
    1144:	e593000c 	ldr	r0, [r3, #12]
    1148:	e5b4c008 	ldr	r12, [r4, #8]!
    114c:	e0831005 	add	r1, r3, r5
    1150:	e382e001 	orr	lr, r2, #1
    1154:	e3855001 	orr	r5, r5, #1
    1158:	e58c000c 	str	r0, [r12, #12]
    115c:	e580c008 	str	r12, [r0, #8]
    1160:	e5835004 	str	r5, [r3, #4]
    1164:	e5871014 	str	r1, [r7, #20]
    1168:	e5871010 	str	r1, [r7, #16]
    116c:	e581800c 	str	r8, [r1, #12]
    1170:	e5818008 	str	r8, [r1, #8]
    1174:	e581e004 	str	lr, [r1, #4]
    1178:	e7812002 	str	r2, [r1, r2]
    117c:	e1a00006 	mov	r0, r6
    1180:	eb000137 	bl	1664 <__malloc_unlock>
    1184:	eaffff95 	b	fe0 <_malloc_r+0x9c>
    1188:	e35e0004 	cmp	lr, #4
    118c:	8a000087 	bhi	13b0 <_malloc_r+0x46c>
    1190:	e1a0e325 	lsr	lr, r5, #6
    1194:	e28ee038 	add	lr, lr, #56	; 0x38
    1198:	e1a0108e 	lsl	r1, lr, #1
    119c:	eaffff97 	b	1000 <_malloc_r+0xbc>
    11a0:	e0842002 	add	r2, r4, r2
    11a4:	e5923004 	ldr	r3, [r2, #4]
    11a8:	e3833001 	orr	r3, r3, #1
    11ac:	e5823004 	str	r3, [r2, #4]
    11b0:	e1a00006 	mov	r0, r6
    11b4:	eb00012a 	bl	1664 <__malloc_unlock>
    11b8:	e2844008 	add	r4, r4, #8
    11bc:	eaffff87 	b	fe0 <_malloc_r+0x9c>
    11c0:	e5974008 	ldr	r4, [r7, #8]
    11c4:	e594a004 	ldr	r10, [r4, #4]
    11c8:	e3caa003 	bic	r10, r10, #3
    11cc:	e155000a 	cmp	r5, r10
    11d0:	8a000002 	bhi	11e0 <_malloc_r+0x29c>
    11d4:	e065300a 	rsb	r3, r5, r10
    11d8:	e353000f 	cmp	r3, #15
    11dc:	ca00005d 	bgt	1358 <_malloc_r+0x414>
    11e0:	e59f9470 	ldr	r9, [pc, #1136]	; 1658 <_malloc_r+0x714>
    11e4:	e5973408 	ldr	r3, [r7, #1032]	; 0x408
    11e8:	e599b000 	ldr	r11, [r9]
    11ec:	e3730001 	cmn	r3, #1
    11f0:	e085b00b 	add	r11, r5, r11
    11f4:	128bba01 	addne	r11, r11, #4096	; 0x1000
    11f8:	128bb00f 	addne	r11, r11, #15
    11fc:	13cbbeff 	bicne	r11, r11, #4080	; 0xff0
    1200:	028bb010 	addeq	r11, r11, #16
    1204:	13cbb00f 	bicne	r11, r11, #15
    1208:	e084200a 	add	r2, r4, r10
    120c:	e1a00006 	mov	r0, r6
    1210:	e1a0100b 	mov	r1, r11
    1214:	e58d2004 	str	r2, [sp, #4]
    1218:	eb000112 	bl	1668 <_sbrk_r>
    121c:	e3700001 	cmn	r0, #1
    1220:	e1a08000 	mov	r8, r0
    1224:	e59d2004 	ldr	r2, [sp, #4]
    1228:	0a0000e2 	beq	15b8 <_malloc_r+0x674>
    122c:	e1520000 	cmp	r2, r0
    1230:	8a0000bf 	bhi	1534 <_malloc_r+0x5f0>
    1234:	e5993004 	ldr	r3, [r9, #4]
    1238:	e1520008 	cmp	r2, r8
    123c:	e08b3003 	add	r3, r11, r3
    1240:	e5893004 	str	r3, [r9, #4]
    1244:	0a0000df 	beq	15c8 <_malloc_r+0x684>
    1248:	e5971408 	ldr	r1, [r7, #1032]	; 0x408
    124c:	e3710001 	cmn	r1, #1
    1250:	10622008 	rsbne	r2, r2, r8
    1254:	059f33f8 	ldreq	r3, [pc, #1016]	; 1654 <_malloc_r+0x710>
    1258:	10833002 	addne	r3, r3, r2
    125c:	05838408 	streq	r8, [r3, #1032]	; 0x408
    1260:	15893004 	strne	r3, [r9, #4]
    1264:	e2183007 	ands	r3, r8, #7
    1268:	12632008 	rsbne	r2, r3, #8
    126c:	10888002 	addne	r8, r8, r2
    1270:	12633a01 	rsbne	r3, r3, #4096	; 0x1000
    1274:	12832008 	addne	r2, r3, #8
    1278:	e088300b 	add	r3, r8, r11
    127c:	03a02a01 	moveq	r2, #4096	; 0x1000
    1280:	e1a03a03 	lsl	r3, r3, #20
    1284:	e042ba23 	sub	r11, r2, r3, lsr #20
    1288:	e1a0100b 	mov	r1, r11
    128c:	e1a00006 	mov	r0, r6
    1290:	eb0000f4 	bl	1668 <_sbrk_r>
    1294:	e3700001 	cmn	r0, #1
    1298:	10682000 	rsbne	r2, r8, r0
    129c:	e5993004 	ldr	r3, [r9, #4]
    12a0:	108b2002 	addne	r2, r11, r2
    12a4:	03a0b000 	moveq	r11, #0
    12a8:	13822001 	orrne	r2, r2, #1
    12ac:	03a02001 	moveq	r2, #1
    12b0:	e08b3003 	add	r3, r11, r3
    12b4:	e1540007 	cmp	r4, r7
    12b8:	e5893004 	str	r3, [r9, #4]
    12bc:	e5878008 	str	r8, [r7, #8]
    12c0:	e5882004 	str	r2, [r8, #4]
    12c4:	0a00000d 	beq	1300 <_malloc_r+0x3bc>
    12c8:	e35a000f 	cmp	r10, #15
    12cc:	9a0000ac 	bls	1584 <_malloc_r+0x640>
    12d0:	e594c004 	ldr	r12, [r4, #4]
    12d4:	e24a200c 	sub	r2, r10, #12
    12d8:	e3c22007 	bic	r2, r2, #7
    12dc:	e20cc001 	and	r12, r12, #1
    12e0:	e0841002 	add	r1, r4, r2
    12e4:	e3a00005 	mov	r0, #5
    12e8:	e182c00c 	orr	r12, r2, r12
    12ec:	e352000f 	cmp	r2, #15
    12f0:	e584c004 	str	r12, [r4, #4]
    12f4:	e5810004 	str	r0, [r1, #4]
    12f8:	e5810008 	str	r0, [r1, #8]
    12fc:	8a0000b8 	bhi	15e4 <_malloc_r+0x6a0>
    1300:	e599202c 	ldr	r2, [r9, #44]	; 0x2c
    1304:	e1530002 	cmp	r3, r2
    1308:	859f2348 	ldrhi	r2, [pc, #840]	; 1658 <_malloc_r+0x714>
    130c:	8582302c 	strhi	r3, [r2, #44]	; 0x2c
    1310:	e5992030 	ldr	r2, [r9, #48]	; 0x30
    1314:	e5974008 	ldr	r4, [r7, #8]
    1318:	e1530002 	cmp	r3, r2
    131c:	95943004 	ldrls	r3, [r4, #4]
    1320:	85942004 	ldrhi	r2, [r4, #4]
    1324:	859f132c 	ldrhi	r1, [pc, #812]	; 1658 <_malloc_r+0x714>
    1328:	93c33003 	bicls	r3, r3, #3
    132c:	85813030 	strhi	r3, [r1, #48]	; 0x30
    1330:	83c23003 	bichi	r3, r2, #3
    1334:	e1550003 	cmp	r5, r3
    1338:	e0653003 	rsb	r3, r5, r3
    133c:	8a000001 	bhi	1348 <_malloc_r+0x404>
    1340:	e353000f 	cmp	r3, #15
    1344:	ca000003 	bgt	1358 <_malloc_r+0x414>
    1348:	e1a00006 	mov	r0, r6
    134c:	eb0000c4 	bl	1664 <__malloc_unlock>
    1350:	e3a04000 	mov	r4, #0
    1354:	eaffff21 	b	fe0 <_malloc_r+0x9c>
    1358:	e0842005 	add	r2, r4, r5
    135c:	e3833001 	orr	r3, r3, #1
    1360:	e3855001 	orr	r5, r5, #1
    1364:	e5845004 	str	r5, [r4, #4]
    1368:	e1a00006 	mov	r0, r6
    136c:	e5823004 	str	r3, [r2, #4]
    1370:	e5872008 	str	r2, [r7, #8]
    1374:	e2844008 	add	r4, r4, #8
    1378:	eb0000b9 	bl	1664 <__malloc_unlock>
    137c:	eaffff17 	b	fe0 <_malloc_r+0x9c>
    1380:	e0842002 	add	r2, r4, r2
    1384:	e5920004 	ldr	r0, [r2, #4]
    1388:	e2841008 	add	r1, r4, #8
    138c:	e891000a 	ldm	r1, {r1, r3}
    1390:	e3800001 	orr	r0, r0, #1
    1394:	e5820004 	str	r0, [r2, #4]
    1398:	e581300c 	str	r3, [r1, #12]
    139c:	e5831008 	str	r1, [r3, #8]
    13a0:	e1a00006 	mov	r0, r6
    13a4:	eb0000ae 	bl	1664 <__malloc_unlock>
    13a8:	e2844008 	add	r4, r4, #8
    13ac:	eaffff0b 	b	fe0 <_malloc_r+0x9c>
    13b0:	e35e0014 	cmp	lr, #20
    13b4:	928ee05b 	addls	lr, lr, #91	; 0x5b
    13b8:	91a0108e 	lslls	r1, lr, #1
    13bc:	9affff0f 	bls	1000 <_malloc_r+0xbc>
    13c0:	e35e0054 	cmp	lr, #84	; 0x54
    13c4:	8a000061 	bhi	1550 <_malloc_r+0x60c>
    13c8:	e1a0e625 	lsr	lr, r5, #12
    13cc:	e28ee06e 	add	lr, lr, #110	; 0x6e
    13d0:	e1a0108e 	lsl	r1, lr, #1
    13d4:	eaffff09 	b	1000 <_malloc_r+0xbc>
    13d8:	e1a034a2 	lsr	r3, r2, #9
    13dc:	e3530004 	cmp	r3, #4
    13e0:	9a00004f 	bls	1524 <_malloc_r+0x5e0>
    13e4:	e3530014 	cmp	r3, #20
    13e8:	9283a05b 	addls	r10, r3, #91	; 0x5b
    13ec:	91a0008a 	lslls	r0, r10, #1
    13f0:	9a000004 	bls	1408 <_malloc_r+0x4c4>
    13f4:	e3530054 	cmp	r3, #84	; 0x54
    13f8:	8a00007f 	bhi	15fc <_malloc_r+0x6b8>
    13fc:	e1a0a622 	lsr	r10, r2, #12
    1400:	e28aa06e 	add	r10, r10, #110	; 0x6e
    1404:	e1a0008a 	lsl	r0, r10, #1
    1408:	e0870100 	add	r0, r7, r0, lsl #2
    140c:	e5903008 	ldr	r3, [r0, #8]
    1410:	e1530000 	cmp	r3, r0
    1414:	e59fc238 	ldr	r12, [pc, #568]	; 1654 <_malloc_r+0x710>
    1418:	0a000052 	beq	1568 <_malloc_r+0x624>
    141c:	e5931004 	ldr	r1, [r3, #4]
    1420:	e3c11003 	bic	r1, r1, #3
    1424:	e1520001 	cmp	r2, r1
    1428:	2a000002 	bcs	1438 <_malloc_r+0x4f4>
    142c:	e5933008 	ldr	r3, [r3, #8]
    1430:	e1500003 	cmp	r0, r3
    1434:	1afffff8 	bne	141c <_malloc_r+0x4d8>
    1438:	e593200c 	ldr	r2, [r3, #12]
    143c:	e5971004 	ldr	r1, [r7, #4]
    1440:	e584200c 	str	r2, [r4, #12]
    1444:	e5843008 	str	r3, [r4, #8]
    1448:	e583400c 	str	r4, [r3, #12]
    144c:	e5824008 	str	r4, [r2, #8]
    1450:	eaffff19 	b	10bc <_malloc_r+0x178>
    1454:	e0842005 	add	r2, r4, r5
    1458:	e3810001 	orr	r0, r1, #1
    145c:	e3855001 	orr	r5, r5, #1
    1460:	e5845004 	str	r5, [r4, #4]
    1464:	e5832014 	str	r2, [r3, #20]
    1468:	e5832010 	str	r2, [r3, #16]
    146c:	e582800c 	str	r8, [r2, #12]
    1470:	e9820101 	stmib	r2, {r0, r8}
    1474:	e7821001 	str	r1, [r2, r1]
    1478:	e1a00006 	mov	r0, r6
    147c:	eb000078 	bl	1664 <__malloc_unlock>
    1480:	e2844008 	add	r4, r4, #8
    1484:	eafffed5 	b	fe0 <_malloc_r+0x9c>
    1488:	e2844001 	add	r4, r4, #1
    148c:	e3140003 	tst	r4, #3
    1490:	e28cc008 	add	r12, r12, #8
    1494:	1affff1b 	bne	1108 <_malloc_r+0x1c4>
    1498:	e31e0003 	tst	lr, #3
    149c:	e24a3008 	sub	r3, r10, #8
    14a0:	0a000062 	beq	1630 <_malloc_r+0x6ec>
    14a4:	e59aa000 	ldr	r10, [r10]
    14a8:	e15a0003 	cmp	r10, r3
    14ac:	e24ee001 	sub	lr, lr, #1
    14b0:	0afffff8 	beq	1498 <_malloc_r+0x554>
    14b4:	e5973004 	ldr	r3, [r7, #4]
    14b8:	e1a00080 	lsl	r0, r0, #1
    14bc:	e1500003 	cmp	r0, r3
    14c0:	8affff3e 	bhi	11c0 <_malloc_r+0x27c>
    14c4:	e3500000 	cmp	r0, #0
    14c8:	0affff3c 	beq	11c0 <_malloc_r+0x27c>
    14cc:	e1130000 	tst	r3, r0
    14d0:	0a00005a 	beq	1640 <_malloc_r+0x6fc>
    14d4:	e1a0e004 	mov	lr, r4
    14d8:	eaffff07 	b	10fc <_malloc_r+0x1b8>
    14dc:	e2843008 	add	r3, r4, #8
    14e0:	e5944014 	ldr	r4, [r4, #20]
    14e4:	e1530004 	cmp	r3, r4
    14e8:	028ee002 	addeq	lr, lr, #2
    14ec:	0afffed5 	beq	1048 <_malloc_r+0x104>
    14f0:	eafffead 	b	fac <_malloc_r+0x68>
    14f4:	e0831001 	add	r1, r3, r1
    14f8:	e5910004 	ldr	r0, [r1, #4]
    14fc:	e1a04003 	mov	r4, r3
    1500:	e5b42008 	ldr	r2, [r4, #8]!
    1504:	e593300c 	ldr	r3, [r3, #12]
    1508:	e3800001 	orr	r0, r0, #1
    150c:	e5810004 	str	r0, [r1, #4]
    1510:	e582300c 	str	r3, [r2, #12]
    1514:	e5832008 	str	r2, [r3, #8]
    1518:	e1a00006 	mov	r0, r6
    151c:	eb000050 	bl	1664 <__malloc_unlock>
    1520:	eafffeae 	b	fe0 <_malloc_r+0x9c>
    1524:	e1a0a322 	lsr	r10, r2, #6
    1528:	e28aa038 	add	r10, r10, #56	; 0x38
    152c:	e1a0008a 	lsl	r0, r10, #1
    1530:	eaffffb4 	b	1408 <_malloc_r+0x4c4>
    1534:	e1540007 	cmp	r4, r7
    1538:	0affff3d 	beq	1234 <_malloc_r+0x2f0>
    153c:	e59f3110 	ldr	r3, [pc, #272]	; 1654 <_malloc_r+0x710>
    1540:	e5934008 	ldr	r4, [r3, #8]
    1544:	e5943004 	ldr	r3, [r4, #4]
    1548:	e3c33003 	bic	r3, r3, #3
    154c:	eaffff78 	b	1334 <_malloc_r+0x3f0>
    1550:	e35e0f55 	cmp	lr, #340	; 0x154
    1554:	8a00000f 	bhi	1598 <_malloc_r+0x654>
    1558:	e1a0e7a5 	lsr	lr, r5, #15
    155c:	e28ee077 	add	lr, lr, #119	; 0x77
    1560:	e1a0108e 	lsl	r1, lr, #1
    1564:	eafffea5 	b	1000 <_malloc_r+0xbc>
    1568:	e59c2004 	ldr	r2, [r12, #4]
    156c:	e1a0a14a 	asr	r10, r10, #2
    1570:	e3a01001 	mov	r1, #1
    1574:	e1821a11 	orr	r1, r2, r1, lsl r10
    1578:	e1a02003 	mov	r2, r3
    157c:	e58c1004 	str	r1, [r12, #4]
    1580:	eaffffae 	b	1440 <_malloc_r+0x4fc>
    1584:	e3a03001 	mov	r3, #1
    1588:	e5883004 	str	r3, [r8, #4]
    158c:	e1a04008 	mov	r4, r8
    1590:	e3a03000 	mov	r3, #0
    1594:	eaffff66 	b	1334 <_malloc_r+0x3f0>
    1598:	e59f30bc 	ldr	r3, [pc, #188]	; 165c <_malloc_r+0x718>
    159c:	e15e0003 	cmp	lr, r3
    15a0:	91a0e925 	lsrls	lr, r5, #18
    15a4:	928ee07c 	addls	lr, lr, #124	; 0x7c
    15a8:	91a0108e 	lslls	r1, lr, #1
    15ac:	83a010fc 	movhi	r1, #252	; 0xfc
    15b0:	83a0e07e 	movhi	lr, #126	; 0x7e
    15b4:	eafffe91 	b	1000 <_malloc_r+0xbc>
    15b8:	e5974008 	ldr	r4, [r7, #8]
    15bc:	e5943004 	ldr	r3, [r4, #4]
    15c0:	e3c33003 	bic	r3, r3, #3
    15c4:	eaffff5a 	b	1334 <_malloc_r+0x3f0>
    15c8:	e1b01a02 	lsls	r1, r2, #20
    15cc:	1affff1d 	bne	1248 <_malloc_r+0x304>
    15d0:	e5972008 	ldr	r2, [r7, #8]
    15d4:	e08b100a 	add	r1, r11, r10
    15d8:	e3811001 	orr	r1, r1, #1
    15dc:	e5821004 	str	r1, [r2, #4]
    15e0:	eaffff46 	b	1300 <_malloc_r+0x3bc>
    15e4:	e1a00006 	mov	r0, r6
    15e8:	e2841008 	add	r1, r4, #8
    15ec:	ebfffdb9 	bl	cd8 <_free_r>
    15f0:	e59f3060 	ldr	r3, [pc, #96]	; 1658 <_malloc_r+0x714>
    15f4:	e5933004 	ldr	r3, [r3, #4]
    15f8:	eaffff40 	b	1300 <_malloc_r+0x3bc>
    15fc:	e3530f55 	cmp	r3, #340	; 0x154
    1600:	91a0a7a2 	lsrls	r10, r2, #15
    1604:	928aa077 	addls	r10, r10, #119	; 0x77
    1608:	91a0008a 	lslls	r0, r10, #1
    160c:	9affff7d 	bls	1408 <_malloc_r+0x4c4>
    1610:	e59f1044 	ldr	r1, [pc, #68]	; 165c <_malloc_r+0x718>
    1614:	e1530001 	cmp	r3, r1
    1618:	91a0a922 	lsrls	r10, r2, #18
    161c:	928aa07c 	addls	r10, r10, #124	; 0x7c
    1620:	91a0008a 	lslls	r0, r10, #1
    1624:	83a000fc 	movhi	r0, #252	; 0xfc
    1628:	83a0a07e 	movhi	r10, #126	; 0x7e
    162c:	eaffff75 	b	1408 <_malloc_r+0x4c4>
    1630:	e5973004 	ldr	r3, [r7, #4]
    1634:	e1c33000 	bic	r3, r3, r0
    1638:	e5873004 	str	r3, [r7, #4]
    163c:	eaffff9d 	b	14b8 <_malloc_r+0x574>
    1640:	e1a00080 	lsl	r0, r0, #1
    1644:	e1130000 	tst	r3, r0
    1648:	e2844004 	add	r4, r4, #4
    164c:	1affffa0 	bne	14d4 <_malloc_r+0x590>
    1650:	eafffffa 	b	1640 <_malloc_r+0x6fc>
    1654:	00001d10 	.word	0x00001d10
    1658:	00002148 	.word	0x00002148
    165c:	00000554 	.word	0x00000554

00001660 <__malloc_lock>:
    1660:	e12fff1e 	bx	lr

00001664 <__malloc_unlock>:
    1664:	e12fff1e 	bx	lr

00001668 <_sbrk_r>:
    1668:	e92d4038 	push	{r3, r4, r5, lr}
    166c:	e59f4030 	ldr	r4, [pc, #48]	; 16a4 <_sbrk_r+0x3c>
    1670:	e3a03000 	mov	r3, #0
    1674:	e1a05000 	mov	r5, r0
    1678:	e1a00001 	mov	r0, r1
    167c:	e5843000 	str	r3, [r4]
    1680:	eb000034 	bl	1758 <_sbrk>
    1684:	e3700001 	cmn	r0, #1
    1688:	0a000001 	beq	1694 <_sbrk_r+0x2c>
    168c:	e8bd4038 	pop	{r3, r4, r5, lr}
    1690:	e12fff1e 	bx	lr
    1694:	e5943000 	ldr	r3, [r4]
    1698:	e3530000 	cmp	r3, #0
    169c:	15853000 	strne	r3, [r5]
    16a0:	eafffff9 	b	168c <_sbrk_r+0x24>
    16a4:	00002144 	.word	0x00002144

000016a8 <__cs3_premain>:
    16a8:	e92d4008 	push	{r3, lr}
    16ac:	eb000050 	bl	17f4 <__libc_init_array>
    16b0:	e59f3030 	ldr	r3, [pc, #48]	; 16e8 <__cs3_premain+0x40>
    16b4:	e3530000 	cmp	r3, #0
    16b8:	15930000 	ldrne	r0, [r3]
    16bc:	01a00003 	moveq	r0, r3
    16c0:	e59f3024 	ldr	r3, [pc, #36]	; 16ec <__cs3_premain+0x44>
    16c4:	e3530000 	cmp	r3, #0
    16c8:	15931000 	ldrne	r1, [r3]
    16cc:	01a01003 	moveq	r1, r3
    16d0:	e3a02000 	mov	r2, #0
    16d4:	ebfffb4f 	bl	418 <main>
    16d8:	e59f3010 	ldr	r3, [pc, #16]	; 16f0 <__cs3_premain+0x48>
    16dc:	e3530000 	cmp	r3, #0
    16e0:	1bfffbf9 	blne	6cc <exit>
    16e4:	eafffffe 	b	16e4 <__cs3_premain+0x3c>
	...
    16f0:	000006cc 	.word	0x000006cc

000016f4 <_exit>:
    16f4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    16f8:	e3a00018 	mov	r0, #24
    16fc:	e59f1004 	ldr	r1, [pc, #4]	; 1708 <_exit+0x14>
    1700:	ef123456 	svc	0x00123456
    1704:	eafffffe 	b	1704 <_exit+0x10>
    1708:	00020026 	.word	0x00020026

0000170c <_gettimeofday>:
    170c:	e92d4038 	push	{r3, r4, r5, lr}
    1710:	e2505000 	subs	r5, r0, #0
    1714:	e1a04001 	mov	r4, r1
    1718:	0a000007 	beq	173c <_gettimeofday+0x30>
    171c:	e3510000 	cmp	r1, #0
    1720:	1a000007 	bne	1744 <_gettimeofday+0x38>
    1724:	e3a00011 	mov	r0, #17
    1728:	ef123456 	svc	0x00123456
    172c:	e8850011 	stm	r5, {r0, r4}
    1730:	e1a00004 	mov	r0, r4
    1734:	e8bd4038 	pop	{r3, r4, r5, lr}
    1738:	e12fff1e 	bx	lr
    173c:	e1a00005 	mov	r0, r5
    1740:	eafffffb 	b	1734 <_gettimeofday+0x28>
    1744:	eb000026 	bl	17e4 <__errno>
    1748:	e3a03016 	mov	r3, #22
    174c:	e5803000 	str	r3, [r0]
    1750:	e3e00000 	mvn	r0, #0
    1754:	eafffff6 	b	1734 <_gettimeofday+0x28>

00001758 <_sbrk>:
    1758:	e92d4008 	push	{r3, lr}
    175c:	e59f305c 	ldr	r3, [pc, #92]	; 17c0 <_sbrk+0x68>
    1760:	e59f105c 	ldr	r1, [pc, #92]	; 17c4 <_sbrk+0x6c>
    1764:	e5932000 	ldr	r2, [r3]
    1768:	e5913000 	ldr	r3, [r1]
    176c:	e3520000 	cmp	r2, #0
    1770:	e0830000 	add	r0, r3, r0
    1774:	0a000002 	beq	1784 <_sbrk+0x2c>
    1778:	e0602002 	rsb	r2, r0, r2
    177c:	e3520000 	cmp	r2, #0
    1780:	ba000009 	blt	17ac <_sbrk+0x54>
    1784:	e04d2003 	sub	r2, sp, r3
    1788:	e3520000 	cmp	r2, #0
    178c:	ba000002 	blt	179c <_sbrk+0x44>
    1790:	e04d2000 	sub	r2, sp, r0
    1794:	e35200ff 	cmp	r2, #255	; 0xff
    1798:	da000003 	ble	17ac <_sbrk+0x54>
    179c:	e5810000 	str	r0, [r1]
    17a0:	e1a00003 	mov	r0, r3
    17a4:	e8bd4008 	pop	{r3, lr}
    17a8:	e12fff1e 	bx	lr
    17ac:	eb00000c 	bl	17e4 <__errno>
    17b0:	e3a0300c 	mov	r3, #12
    17b4:	e5803000 	str	r3, [r0]
    17b8:	e3e03000 	mvn	r3, #0
    17bc:	eafffff7 	b	17a0 <_sbrk+0x48>
    17c0:	00002120 	.word	0x00002120
    17c4:	00002124 	.word	0x00002124

000017c8 <__cs3_isr_interrupt>:
    17c8:	eafffffe 	b	17c8 <__cs3_isr_interrupt>

000017cc <__cs3_isr_undef>:
    17cc:	eafffffe 	b	17cc <__cs3_isr_undef>

000017d0 <__cs3_isr_swi>:
    17d0:	eafffffe 	b	17d0 <__cs3_isr_swi>

000017d4 <__cs3_isr_pabort>:
    17d4:	eafffffe 	b	17d4 <__cs3_isr_pabort>

000017d8 <__cs3_isr_dabort>:
    17d8:	eafffffe 	b	17d8 <__cs3_isr_dabort>

000017dc <__cs3_isr_irq>:
    17dc:	eafffffe 	b	17dc <__cs3_isr_irq>

000017e0 <__cs3_isr_fiq>:
    17e0:	eafffffe 	b	17e0 <__cs3_isr_fiq>

000017e4 <__errno>:
    17e4:	e59f3004 	ldr	r3, [pc, #4]	; 17f0 <__errno+0xc>
    17e8:	e5930000 	ldr	r0, [r3]
    17ec:	e12fff1e 	bx	lr
    17f0:	000018e0 	.word	0x000018e0

000017f4 <__libc_init_array>:
    17f4:	e92d4070 	push	{r4, r5, r6, lr}
    17f8:	e59f506c 	ldr	r5, [pc, #108]	; 186c <__libc_init_array+0x78>
    17fc:	e59f606c 	ldr	r6, [pc, #108]	; 1870 <__libc_init_array+0x7c>
    1800:	e0656006 	rsb	r6, r5, r6
    1804:	e1b06146 	asrs	r6, r6, #2
    1808:	12455004 	subne	r5, r5, #4
    180c:	13a04000 	movne	r4, #0
    1810:	0a000005 	beq	182c <__libc_init_array+0x38>
    1814:	e5b53004 	ldr	r3, [r5, #4]!
    1818:	e2844001 	add	r4, r4, #1
    181c:	e1a0e00f 	mov	lr, pc
    1820:	e12fff13 	bx	r3
    1824:	e1560004 	cmp	r6, r4
    1828:	1afffff9 	bne	1814 <__libc_init_array+0x20>
    182c:	e59f5040 	ldr	r5, [pc, #64]	; 1874 <__libc_init_array+0x80>
    1830:	e59f6040 	ldr	r6, [pc, #64]	; 1878 <__libc_init_array+0x84>
    1834:	e0656006 	rsb	r6, r5, r6
    1838:	eb000012 	bl	1888 <_init>
    183c:	e1b06146 	asrs	r6, r6, #2
    1840:	12455004 	subne	r5, r5, #4
    1844:	13a04000 	movne	r4, #0
    1848:	0a000005 	beq	1864 <__libc_init_array+0x70>
    184c:	e5b53004 	ldr	r3, [r5, #4]!
    1850:	e2844001 	add	r4, r4, #1
    1854:	e1a0e00f 	mov	lr, pc
    1858:	e12fff13 	bx	r3
    185c:	e1560004 	cmp	r6, r4
    1860:	1afffff9 	bne	184c <__libc_init_array+0x58>
    1864:	e8bd4070 	pop	{r4, r5, r6, lr}
    1868:	e12fff1e 	bx	lr
    186c:	000018a0 	.word	0x000018a0
    1870:	000018a0 	.word	0x000018a0
    1874:	000018a0 	.word	0x000018a0
    1878:	000018a8 	.word	0x000018a8

Disassembly of section .rodata:

00001880 <_global_impure_ptr>:
    1880:	000018e8 00000043                       ....C...

00001888 <_init>:
    1888:	e1a0c00d 	mov	r12, sp
    188c:	e92ddff8 	push	{r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, lr, pc}
    1890:	e24cb004 	sub	r11, r12, #4
    1894:	e24bd028 	sub	sp, r11, #40	; 0x28
    1898:	e89d6ff0 	ldm	sp, {r4, r5, r6, r7, r8, r9, r10, r11, sp, lr}
    189c:	e12fff1e 	bx	lr

000018a0 <__init_array_start>:
    18a0:	00000998 	.word	0x00000998

000018a4 <__frame_dummy_init_array_entry>:
    18a4:	00000208                                ....

000018a8 <__libc_fini>:
    18a8:	e1a0c00d 	mov	r12, sp
    18ac:	e92ddff8 	push	{r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, lr, pc}
    18b0:	e24cb004 	sub	r11, r12, #4
    18b4:	e24bd028 	sub	sp, r11, #40	; 0x28
    18b8:	e89d6ff0 	ldm	sp, {r4, r5, r6, r7, r8, r9, r10, r11, sp, lr}
    18bc:	e12fff1e 	bx	lr

000018c0 <__fini_array_start>:
    18c0:	000001c4 	.word	0x000001c4

000018c4 <__cs3_regions>:
	...
    18d0:	00002128 	.word	0x00002128
    18d4:	00000058 	.word	0x00000058
